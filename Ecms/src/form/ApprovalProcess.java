package form;

import javax.swing.JOptionPane;
import config.Constanta;
import java.awt.HeadlessException;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.TreeMap;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import model.Attachment;
import model.Employee;
import model.Leave;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 *
 */
public class ApprovalProcess extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public ApprovalProcess() {
        initComponents();
        formApprovalProcessHeaderLabelId.setVisible(false);
        formApprovalProcessHeaderLabelNik.setVisible(false);
        formApprovalProcessHeaderLabelNikLeave.setVisible(false);
        formApprovalProcessHeaderLabelIdLeave.setVisible(false);
        formApprovalProcessHeaderLabelNikLeave.setText(Constanta.Default.DEFAULT_VALUE);
        formApprovalProcessHeaderLabelIdLeave.setText(Constanta.Default.DEFAULT_VALUE);
        bindDataStatusLeave();
        
        formApprovalProcessMainTextFieldFullName.setEnabled(false);
        formApprovalProcessMainComboBoxType.setEnabled(false);
        formApprovalProcessMainDateChooserFrom.setEnabled(false);
        formApprovalProcessMainDateChooserTo.setEnabled(false);
        formApprovalProcessMainTextAreaReasons.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        formApprovalProcessPanelHeader = new javax.swing.JPanel();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        formApprovalProcessHeaderLable = new javax.swing.JLabel();
        formApprovalProcessPanelFooter = new javax.swing.JPanel();
        kGradientPanel3 = new keeptoo.KGradientPanel();
        formApprovalProcessHeaderLabelId = new javax.swing.JLabel();
        formApprovalProcessHeaderLabelNikLeave = new javax.swing.JLabel();
        formApprovalProcessHeaderLabelIdLeave = new javax.swing.JLabel();
        formApprovalProcessHeaderLabelNik = new javax.swing.JLabel();
        formApprovalProcessPanelMain = new javax.swing.JPanel();
        formApprovalProcessMainLabelFullNameUser = new javax.swing.JLabel();
        formApprovalProcessMainButtonBack = new javax.swing.JButton();
        formApprovalProcessMainButtonLogout = new javax.swing.JButton();
        formApprovalProcessMainPanelForm = new javax.swing.JPanel();
        formApprovalProcessMainLabelFullName = new javax.swing.JLabel();
        formApprovalProcessMainLabelFrom = new javax.swing.JLabel();
        formApprovalProcessMainLabelReasons = new javax.swing.JLabel();
        formApprovalProcessMainLabelFile = new javax.swing.JLabel();
        formApprovalProcessMainLabelTo = new javax.swing.JLabel();
        formApprovalProcessMainTextFieldFullName = new javax.swing.JTextField();
        formApprovalProcessMainComboBoxType = new javax.swing.JComboBox<>();
        formApprovalProcessMainDateChooserFrom = new com.toedter.calendar.JDateChooser();
        formApprovalProcessMainDateChooserTo = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        formApprovalProcessMainTextAreaReasons = new javax.swing.JTextArea();
        formApprovalProcessMainPanelButton = new javax.swing.JPanel();
        formApprovalProcessMainButtonApproved = new javax.swing.JButton();
        formApprovalProcessMainButtonRejected = new javax.swing.JButton();
        formApprovalProcessMainPanelFiles = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        formApprovalProcessMainTableAttachment = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Approval Process");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(1280, 720));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setName("frameEmployee"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        formApprovalProcessPanelHeader.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        formApprovalProcessPanelHeader.setPreferredSize(new java.awt.Dimension(1280, 100));

        kGradientPanel2.setkEndColor(new java.awt.Color(51, 153, 255));
        kGradientPanel2.setkGradientFocus(400);
        kGradientPanel2.setkStartColor(new java.awt.Color(0, 204, 204));

        formApprovalProcessHeaderLable.setFont(new java.awt.Font("Roboto Medium", 0, 36)); // NOI18N
        formApprovalProcessHeaderLable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        formApprovalProcessHeaderLable.setIcon(new javax.swing.ImageIcon("D:\\dev\\.project\\ecms\\lib\\logo.png")); // NOI18N
        formApprovalProcessHeaderLable.setPreferredSize(new java.awt.Dimension(1280, 100));

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(formApprovalProcessHeaderLable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(formApprovalProcessHeaderLable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        formApprovalProcessHeaderLable.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout formApprovalProcessPanelHeaderLayout = new javax.swing.GroupLayout(formApprovalProcessPanelHeader);
        formApprovalProcessPanelHeader.setLayout(formApprovalProcessPanelHeaderLayout);
        formApprovalProcessPanelHeaderLayout.setHorizontalGroup(
            formApprovalProcessPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        formApprovalProcessPanelHeaderLayout.setVerticalGroup(
            formApprovalProcessPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        getContentPane().add(formApprovalProcessPanelHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 0, -1, -1));
        formApprovalProcessPanelHeader.getAccessibleContext().setAccessibleName("");
        formApprovalProcessPanelHeader.getAccessibleContext().setAccessibleDescription("");

        formApprovalProcessPanelFooter.setBackground(new java.awt.Color(255, 255, 255));
        formApprovalProcessPanelFooter.setPreferredSize(new java.awt.Dimension(1280, 50));

        kGradientPanel3.setkEndColor(new java.awt.Color(51, 153, 255));
        kGradientPanel3.setkGradientFocus(400);
        kGradientPanel3.setkStartColor(new java.awt.Color(0, 204, 204));

        formApprovalProcessHeaderLabelId.setFont(new java.awt.Font("Roboto Light", 0, 8)); // NOI18N
        formApprovalProcessHeaderLabelId.setText("Id");
        formApprovalProcessHeaderLabelId.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        formApprovalProcessHeaderLabelNikLeave.setFont(new java.awt.Font("Roboto Light", 0, 8)); // NOI18N
        formApprovalProcessHeaderLabelNikLeave.setText("IsUpdate");
        formApprovalProcessHeaderLabelNikLeave.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        formApprovalProcessHeaderLabelIdLeave.setFont(new java.awt.Font("Roboto Light", 0, 8)); // NOI18N
        formApprovalProcessHeaderLabelIdLeave.setText("IdEmployee");
        formApprovalProcessHeaderLabelIdLeave.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        formApprovalProcessHeaderLabelNik.setFont(new java.awt.Font("Roboto Light", 0, 8)); // NOI18N
        formApprovalProcessHeaderLabelNik.setText("Nik");
        formApprovalProcessHeaderLabelNik.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout kGradientPanel3Layout = new javax.swing.GroupLayout(kGradientPanel3);
        kGradientPanel3.setLayout(kGradientPanel3Layout);
        kGradientPanel3Layout.setHorizontalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kGradientPanel3Layout.createSequentialGroup()
                    .addGap(585, 585, 585)
                    .addComponent(formApprovalProcessHeaderLabelId)
                    .addGap(9, 9, 9)
                    .addComponent(formApprovalProcessHeaderLabelNikLeave)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(formApprovalProcessHeaderLabelIdLeave)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(formApprovalProcessHeaderLabelNik)
                    .addContainerGap(586, Short.MAX_VALUE)))
        );
        kGradientPanel3Layout.setVerticalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
            .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kGradientPanel3Layout.createSequentialGroup()
                    .addGap(19, 19, 19)
                    .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(formApprovalProcessHeaderLabelId, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(formApprovalProcessHeaderLabelNik)
                            .addComponent(formApprovalProcessHeaderLabelIdLeave))
                        .addComponent(formApprovalProcessHeaderLabelNikLeave, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(19, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout formApprovalProcessPanelFooterLayout = new javax.swing.GroupLayout(formApprovalProcessPanelFooter);
        formApprovalProcessPanelFooter.setLayout(formApprovalProcessPanelFooterLayout);
        formApprovalProcessPanelFooterLayout.setHorizontalGroup(
            formApprovalProcessPanelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        formApprovalProcessPanelFooterLayout.setVerticalGroup(
            formApprovalProcessPanelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(formApprovalProcessPanelFooter, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 670, -1, -1));

        formApprovalProcessPanelMain.setBackground(new java.awt.Color(255, 255, 255));
        formApprovalProcessPanelMain.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formApprovalProcessPanelMain.setPreferredSize(new java.awt.Dimension(1280, 570));
        formApprovalProcessPanelMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        formApprovalProcessMainLabelFullNameUser.setFont(new java.awt.Font("Roboto Light", 1, 18)); // NOI18N
        formApprovalProcessMainLabelFullNameUser.setText("FullName");
        formApprovalProcessPanelMain.add(formApprovalProcessMainLabelFullNameUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 15, -1, -1));

        formApprovalProcessMainButtonBack.setBackground(new java.awt.Color(255, 255, 255));
        formApprovalProcessMainButtonBack.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formApprovalProcessMainButtonBack.setText("Back");
        formApprovalProcessMainButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formApprovalProcessMainButtonBackActionPerformed(evt);
            }
        });
        formApprovalProcessMainButtonBack.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formApprovalProcessMainButtonBackKeyPressed(evt);
            }
        });
        formApprovalProcessPanelMain.add(formApprovalProcessMainButtonBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(1004, 11, 130, -1));

        formApprovalProcessMainButtonLogout.setBackground(new java.awt.Color(255, 255, 255));
        formApprovalProcessMainButtonLogout.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formApprovalProcessMainButtonLogout.setText("Logout");
        formApprovalProcessMainButtonLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formApprovalProcessMainButtonLogoutActionPerformed(evt);
            }
        });
        formApprovalProcessMainButtonLogout.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formApprovalProcessMainButtonLogoutKeyPressed(evt);
            }
        });
        formApprovalProcessPanelMain.add(formApprovalProcessMainButtonLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 11, 130, -1));

        formApprovalProcessMainPanelForm.setBackground(new java.awt.Color(255, 255, 255));
        formApprovalProcessMainPanelForm.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        formApprovalProcessMainPanelForm.setPreferredSize(new java.awt.Dimension(1270, 236));

        formApprovalProcessMainLabelFullName.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formApprovalProcessMainLabelFullName.setText("Full Name");

        formApprovalProcessMainLabelFrom.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formApprovalProcessMainLabelFrom.setText("From");

        formApprovalProcessMainLabelReasons.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formApprovalProcessMainLabelReasons.setText("Reasons");

        formApprovalProcessMainLabelFile.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formApprovalProcessMainLabelFile.setText("Type");

        formApprovalProcessMainLabelTo.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formApprovalProcessMainLabelTo.setText("To");

        formApprovalProcessMainTextFieldFullName.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        formApprovalProcessMainTextFieldFullName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        formApprovalProcessMainComboBoxType.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N

        formApprovalProcessMainDateChooserFrom.setBackground(new java.awt.Color(255, 255, 255));
        formApprovalProcessMainDateChooserFrom.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formApprovalProcessMainDateChooserFrom.setMinimumSize(new java.awt.Dimension(400, 28));
        formApprovalProcessMainDateChooserFrom.setPreferredSize(new java.awt.Dimension(400, 28));

        formApprovalProcessMainDateChooserTo.setBackground(new java.awt.Color(255, 255, 255));
        formApprovalProcessMainDateChooserTo.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formApprovalProcessMainDateChooserTo.setMinimumSize(new java.awt.Dimension(400, 28));
        formApprovalProcessMainDateChooserTo.setPreferredSize(new java.awt.Dimension(400, 28));

        formApprovalProcessMainTextAreaReasons.setColumns(20);
        formApprovalProcessMainTextAreaReasons.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formApprovalProcessMainTextAreaReasons.setRows(5);
        jScrollPane1.setViewportView(formApprovalProcessMainTextAreaReasons);

        javax.swing.GroupLayout formApprovalProcessMainPanelFormLayout = new javax.swing.GroupLayout(formApprovalProcessMainPanelForm);
        formApprovalProcessMainPanelForm.setLayout(formApprovalProcessMainPanelFormLayout);
        formApprovalProcessMainPanelFormLayout.setHorizontalGroup(
            formApprovalProcessMainPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formApprovalProcessMainPanelFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formApprovalProcessMainPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(formApprovalProcessMainLabelFrom)
                    .addComponent(formApprovalProcessMainLabelReasons)
                    .addComponent(formApprovalProcessMainLabelFullName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                .addGroup(formApprovalProcessMainPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(formApprovalProcessMainPanelFormLayout.createSequentialGroup()
                        .addGroup(formApprovalProcessMainPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(formApprovalProcessMainDateChooserFrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(formApprovalProcessMainTextFieldFullName))
                        .addGap(61, 61, 61)
                        .addGroup(formApprovalProcessMainPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(formApprovalProcessMainLabelTo)
                            .addComponent(formApprovalProcessMainLabelFile))
                        .addGap(140, 140, 140)
                        .addGroup(formApprovalProcessMainPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(formApprovalProcessMainDateChooserTo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(formApprovalProcessMainComboBoxType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        formApprovalProcessMainPanelFormLayout.setVerticalGroup(
            formApprovalProcessMainPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formApprovalProcessMainPanelFormLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(formApprovalProcessMainPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(formApprovalProcessMainLabelFullName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formApprovalProcessMainPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(formApprovalProcessMainComboBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(formApprovalProcessMainLabelFile))
                    .addComponent(formApprovalProcessMainTextFieldFullName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(formApprovalProcessMainPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formApprovalProcessMainPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(formApprovalProcessMainPanelFormLayout.createSequentialGroup()
                            .addGroup(formApprovalProcessMainPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(formApprovalProcessMainLabelTo)
                                .addComponent(formApprovalProcessMainLabelFrom))
                            .addGap(6, 6, 6))
                        .addComponent(formApprovalProcessMainDateChooserFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(formApprovalProcessMainDateChooserTo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(formApprovalProcessMainPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formApprovalProcessMainLabelReasons))
                .addGap(10, 10, 10))
        );

        formApprovalProcessPanelMain.add(formApprovalProcessMainPanelForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 64, 1260, 250));

        formApprovalProcessMainPanelButton.setBackground(new java.awt.Color(255, 255, 255));

        formApprovalProcessMainButtonApproved.setBackground(new java.awt.Color(51, 153, 255));
        formApprovalProcessMainButtonApproved.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formApprovalProcessMainButtonApproved.setText("Approved");
        formApprovalProcessMainButtonApproved.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formApprovalProcessMainButtonApprovedActionPerformed(evt);
            }
        });
        formApprovalProcessMainButtonApproved.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formApprovalProcessMainButtonApprovedKeyPressed(evt);
            }
        });

        formApprovalProcessMainButtonRejected.setBackground(new java.awt.Color(51, 153, 255));
        formApprovalProcessMainButtonRejected.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formApprovalProcessMainButtonRejected.setText("Rejected");
        formApprovalProcessMainButtonRejected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formApprovalProcessMainButtonRejectedActionPerformed(evt);
            }
        });
        formApprovalProcessMainButtonRejected.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formApprovalProcessMainButtonRejectedKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout formApprovalProcessMainPanelButtonLayout = new javax.swing.GroupLayout(formApprovalProcessMainPanelButton);
        formApprovalProcessMainPanelButton.setLayout(formApprovalProcessMainPanelButtonLayout);
        formApprovalProcessMainPanelButtonLayout.setHorizontalGroup(
            formApprovalProcessMainPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formApprovalProcessMainPanelButtonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(formApprovalProcessMainButtonApproved, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(formApprovalProcessMainButtonRejected, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(337, 337, 337))
        );
        formApprovalProcessMainPanelButtonLayout.setVerticalGroup(
            formApprovalProcessMainPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formApprovalProcessMainPanelButtonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(formApprovalProcessMainPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(formApprovalProcessMainButtonRejected)
                    .addComponent(formApprovalProcessMainButtonApproved))
                .addContainerGap())
        );

        formApprovalProcessPanelMain.add(formApprovalProcessMainPanelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 506, 1260, -1));

        formApprovalProcessMainPanelFiles.setBackground(new java.awt.Color(255, 255, 255));
        formApprovalProcessMainPanelFiles.setBorder(javax.swing.BorderFactory.createTitledBorder("List of files"));

        formApprovalProcessMainTableAttachment.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        formApprovalProcessMainTableAttachment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Id Leave", "File Name", "File Path"
            }
        ));
        formApprovalProcessMainTableAttachment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formApprovalProcessMainTableAttachmentMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(formApprovalProcessMainTableAttachment);

        javax.swing.GroupLayout formApprovalProcessMainPanelFilesLayout = new javax.swing.GroupLayout(formApprovalProcessMainPanelFiles);
        formApprovalProcessMainPanelFiles.setLayout(formApprovalProcessMainPanelFilesLayout);
        formApprovalProcessMainPanelFilesLayout.setHorizontalGroup(
            formApprovalProcessMainPanelFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formApprovalProcessMainPanelFilesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        formApprovalProcessMainPanelFilesLayout.setVerticalGroup(
            formApprovalProcessMainPanelFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formApprovalProcessMainPanelFilesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        formApprovalProcessPanelMain.add(formApprovalProcessMainPanelFiles, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 1260, -1));

        getContentPane().add(formApprovalProcessPanelMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, -1, 570));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    LocalDateTime localDateTimeNow = LocalDateTime.now();
    DateTimeFormatter DATETIME_FORMATTER = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");
    private List<String> access_menu = new ArrayList<>();
    private String full_name;
    public List<Attachment> list_attachments = new ArrayList<>();

    public void setLabelId(String text) {
        formApprovalProcessHeaderLabelId.setText(text);
    }

    public void setLabelNik(String text) {
        formApprovalProcessHeaderLabelNik.setText(text);
    }

    public String getFullName() {
        return full_name;
    }

    public void setFullName(String text) {
        this.full_name = text;
        formApprovalProcessMainLabelFullNameUser.setText("Welcome " + text + ",");
    }

    public List<String> getAccessMenu() {
        return access_menu;
    }

    public void setAccessMenu(List<String> value) {
        this.access_menu = value;
    }

    public void setListAttachment(List<Attachment> value) {
        this.list_attachments = value;
    }
    public List<Attachment> getListAttachment() {
        return list_attachments;
    }

    public void loadDataAttachment(Leave leave) {
        List<Attachment> list = leave.getListAttachment();
        DefaultTableModel defaultTableModel = (DefaultTableModel) formApprovalProcessMainTableAttachment.getModel();
        defaultTableModel.setRowCount(0);
        Object[] rows = new Object[9];
        for (int i = 0; i < list.size(); i++) {
            TableColumnModel tableColumnModel = formApprovalProcessMainTableAttachment.getColumnModel();
            tableColumnModel.getColumn(0).setMaxWidth(0);
            tableColumnModel.getColumn(0).setMinWidth(0);
            
            tableColumnModel.getColumn(1).setMaxWidth(0);
            tableColumnModel.getColumn(1).setMinWidth(0);
            
            rows[0] = list.get(i).getId();
            rows[1] = list.get(i).getIdLeave();
            rows[2] = list.get(i).getFileName();
            rows[3] = list.get(i).getFilePath();
            
            defaultTableModel.addRow(rows);
        }
        formApprovalProcessMainTableAttachment.setAutoCreateRowSorter(true);
        setListAttachment(list);
    }
    
    private void bindDataStatusLeave() {
        try {
            Constanta.Leave constantaLeave = new Constanta.Leave();
            HashMap<String, Integer> map = constantaLeave.getTypes();
            TreeMap<String, Integer> sortMap = new TreeMap<>(map);
            sortMap.keySet().forEach((e) -> formApprovalProcessMainComboBoxType.addItem(e));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }


    @SuppressWarnings("empty-statement")
    private boolean submit(String action) throws SQLException {
        boolean result = true;
        Date dateFrom = formApprovalProcessMainDateChooserFrom.getDate();
        Date dateTo = formApprovalProcessMainDateChooserTo.getDate();
        SimpleDateFormat simpleDateFormatFrom = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        SimpleDateFormat simpleDateFormatTo = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

        String date_from = null;
        String date_to = null;

        if (dateFrom != null && dateTo != null) {
            date_from = simpleDateFormatFrom.format(dateFrom);
            date_to = simpleDateFormatTo.format(dateTo);
        } else {
            JOptionPane.showConfirmDialog(null, Constanta.Messages.MESSAGE_INVALID);
            return false;
        }

        Leave leave = new Leave();
        Constanta.Leave constantaLeave = new Constanta.Leave();
        HashMap<String, Integer> map = constantaLeave.getTypes();
        int type_id = Integer.parseInt(map.get(formApprovalProcessMainComboBoxType.getSelectedItem().toString()).toString());
        leave.setId(Integer.parseInt(formApprovalProcessHeaderLabelIdLeave.getText()));
        leave.setIdType(type_id);
        leave.setUsername(formApprovalProcessHeaderLabelNikLeave.getText());
        leave.setRequestDate(localDateTimeNow.format(DATETIME_FORMATTER));
        leave.setDateFrom(date_from);
        leave.setDateTo(date_to);
        leave.setReasons(formApprovalProcessMainTextAreaReasons.getText());
        leave.setStatus(action);
        leave.setListAttachment(getListAttachment());
        if (action.equals(Constanta.Leave.APPROVED)) {
            Employee employee = new Employee();
            employee = employee.getByNik(leave.getUsername());
            int daysOffRemaining = employee.getDaysOff();
            int daysOffRequest = (int) ChronoUnit.DAYS.between(LocalDate.of(dateFrom.getYear(), dateFrom.getMonth(), dateFrom.getDay()), 
                LocalDate.of(dateTo.getYear(), dateTo.getMonth(), dateTo.getDay()));
            employee.setDaysOff(daysOffRemaining - daysOffRequest);
            result = leave.update(leave) && employee.update(employee);
        } else {
            result = leave.update(leave);
        }

        return result;
    }
    
    public void clear(){
        formApprovalProcessMainTextAreaReasons.setText("");
        formApprovalProcessMainDateChooserFrom.setDate(null);
        formApprovalProcessMainDateChooserTo.setDate(null);
        setListAttachment(list_attachments = new ArrayList<>());
    }
    
    private boolean validation(){
        
        boolean result;
        
        result = !(
                formApprovalProcessMainDateChooserTo.getDate() == null
                || formApprovalProcessMainDateChooserFrom.getDate() == null
                || formApprovalProcessMainTextAreaReasons.getText().equals(""));
        
        return result;
    }
    
    public void assignValue(Leave leave) {
        try {
            SimpleDateFormat simpleDateFormatFrom = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat simpleDateFormatTo = new SimpleDateFormat("yyyy-MM-dd");
            
            Date dateFrom = simpleDateFormatFrom.parse(leave.getDateFrom());
            Date dateTo = simpleDateFormatTo.parse(leave.getDateTo());
            
            formApprovalProcessMainTextFieldFullName.setText(leave.getFullName());
            formApprovalProcessMainComboBoxType.setSelectedItem(leave.getTypeName());
            formApprovalProcessMainDateChooserFrom.setDate(dateFrom);
            formApprovalProcessMainDateChooserTo.setDate(dateTo);
            formApprovalProcessMainTextAreaReasons.setText(leave.getReasons());
            formApprovalProcessHeaderLabelNikLeave.setText(leave.getUsername());
            formApprovalProcessHeaderLabelIdLeave.setText(leave.getId().toString());
            loadDataAttachment(leave);
            
            if(!leave.getStatus().equals(Constanta.Leave.SUBMIT)){
                formApprovalProcessMainButtonApproved.setEnabled(false);
                formApprovalProcessMainButtonRejected.setEnabled(false);
            } else {
                formApprovalProcessMainButtonApproved.setEnabled(true);
                formApprovalProcessMainButtonRejected.setEnabled(true);
            }
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }
    
    private void displayImage(String path, String name) throws IOException{
        JPanel panel = new JPanel();

        BufferedImage image = ImageIO.read(new File(path));
        JLabel label = new JLabel(new ImageIcon(image));
        panel.add(label);

        JFrame.setDefaultLookAndFeelDecorated(true);
        JFrame frame = new JFrame(name);

        frame.add(panel);
        frame.pack();
        frame.setVisible(true);
    }
    
    private void formApprovalProcessMainButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formApprovalProcessMainButtonBackActionPerformed
        // TODO add your handling code here:        
        try {
            ApprovalDetail approvalDetail = new ApprovalDetail();
            approvalDetail.show(true);
            approvalDetail.setLabelId(formApprovalProcessHeaderLabelId.getText());
            approvalDetail.setLabelNik(formApprovalProcessHeaderLabelNik.getText());
            approvalDetail.setFullName(getFullName());
            approvalDetail.setAccessMenu(getAccessMenu());
            approvalDetail.loadDataApproval();
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formApprovalProcessMainButtonBackActionPerformed

    private void formApprovalProcessMainButtonBackKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formApprovalProcessMainButtonBackKeyPressed
        // TODO add your handling code here:        
        try {
            ApprovalDetail approvalDetail = new ApprovalDetail();
            approvalDetail.show(true);
            approvalDetail.setLabelId(formApprovalProcessHeaderLabelId.getText());
            approvalDetail.setLabelNik(formApprovalProcessHeaderLabelNik.getText());
            approvalDetail.setFullName(getFullName());
            approvalDetail.setAccessMenu(getAccessMenu());
            approvalDetail.loadDataApproval();
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formApprovalProcessMainButtonBackKeyPressed

    private void formApprovalProcessMainButtonLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formApprovalProcessMainButtonLogoutActionPerformed
        // TODO add your handling code here:
        try {
            int action = JOptionPane.showConfirmDialog(null,
                    Constanta.Messages.MESSAGE_CONFIRM_LOGOUT,
                    Constanta.Messages.BANNER_CONFIRM,
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);

            if (action == JOptionPane.YES_OPTION) {
                Login login = new Login();
                login.show();
                this.dispose();
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formApprovalProcessMainButtonLogoutActionPerformed

    private void formApprovalProcessMainButtonLogoutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formApprovalProcessMainButtonLogoutKeyPressed
        // TODO add your handling code here:
        try {
            int action = JOptionPane.showConfirmDialog(null,
                    Constanta.Messages.MESSAGE_CONFIRM_LOGOUT,
                    Constanta.Messages.BANNER_CONFIRM,
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);

            if (action == JOptionPane.YES_OPTION) {
                Login login = new Login();
                login.show();
                this.dispose();
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formApprovalProcessMainButtonLogoutKeyPressed

    private void formApprovalProcessMainButtonApprovedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formApprovalProcessMainButtonApprovedActionPerformed
        // TODO add your handling code here:
        try {
            int action = JOptionPane.showConfirmDialog(null,
                    Constanta.Messages.MESSAGE_CONFIRM_APPROVED,
                    Constanta.Messages.BANNER_CONFIRM,
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);
            if (action == JOptionPane.YES_OPTION) {
                if (validation()) {
                    if (submit(Constanta.Leave.APPROVED)) {
                        JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_SUCCESS);
                        ApprovalDetail approvalDetail = new ApprovalDetail();
                        approvalDetail.show(true);
                        approvalDetail.setLabelId(formApprovalProcessHeaderLabelId.getText());
                        approvalDetail.setLabelNik(formApprovalProcessHeaderLabelNik.getText());
                        approvalDetail.setFullName(getFullName());
                        approvalDetail.setAccessMenu(getAccessMenu());
                        approvalDetail.loadDataApproval();
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_FAILED);
                    }
                }
            }
            clear();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formApprovalProcessMainButtonApprovedActionPerformed

    private void formApprovalProcessMainButtonApprovedKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formApprovalProcessMainButtonApprovedKeyPressed
        // TODO add your handling code here:
        try {
            int action = JOptionPane.showConfirmDialog(null,
                    Constanta.Messages.MESSAGE_CONFIRM_APPROVED,
                    Constanta.Messages.BANNER_CONFIRM,
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);
            if (action == JOptionPane.YES_OPTION) {
                if (validation()) {
                    if (submit(Constanta.Leave.APPROVED)) {
                        JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_SUCCESS);
                        ApprovalDetail approvalDetail = new ApprovalDetail();
                        approvalDetail.show(true);
                        approvalDetail.setLabelId(formApprovalProcessHeaderLabelId.getText());
                        approvalDetail.setLabelNik(formApprovalProcessHeaderLabelNik.getText());
                        approvalDetail.setFullName(getFullName());
                        approvalDetail.setAccessMenu(getAccessMenu());
                        approvalDetail.loadDataApproval();
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_FAILED);
                    }
                }
            }
            clear();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formApprovalProcessMainButtonApprovedKeyPressed

    private void formApprovalProcessMainButtonRejectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formApprovalProcessMainButtonRejectedActionPerformed
        // TODO add your handling code here:
        try {
            int action = JOptionPane.showConfirmDialog(null,
                    Constanta.Messages.MESSAGE_CONFIRM_REJECTED,
                    Constanta.Messages.BANNER_CONFIRM,
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);
            if (action == JOptionPane.YES_OPTION) {
                if (validation()) {
                    if (submit(Constanta.Leave.REJECTED)) {
                        JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_SUCCESS);
                        ApprovalDetail approvalDetail = new ApprovalDetail();
                        approvalDetail.show(true);
                        approvalDetail.setLabelId(formApprovalProcessHeaderLabelId.getText());
                        approvalDetail.setLabelNik(formApprovalProcessHeaderLabelNik.getText());
                        approvalDetail.setFullName(getFullName());
                        approvalDetail.setAccessMenu(getAccessMenu());
                        approvalDetail.loadDataApproval();
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_FAILED);
                    }
                }
            }
            clear();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formApprovalProcessMainButtonRejectedActionPerformed

    private void formApprovalProcessMainButtonRejectedKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formApprovalProcessMainButtonRejectedKeyPressed
        // TODO add your handling code here:
        try {
            int action = JOptionPane.showConfirmDialog(null,
                    Constanta.Messages.MESSAGE_CONFIRM_REJECTED,
                    Constanta.Messages.BANNER_CONFIRM,
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);
            if (action == JOptionPane.YES_OPTION) {
                if (validation()) {
                    if (submit(Constanta.Leave.REJECTED)) {
                        JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_SUCCESS);
                        ApprovalDetail approvalDetail = new ApprovalDetail();
                        approvalDetail.show(true);
                        approvalDetail.setLabelId(formApprovalProcessHeaderLabelId.getText());
                        approvalDetail.setLabelNik(formApprovalProcessHeaderLabelNik.getText());
                        approvalDetail.setFullName(getFullName());
                        approvalDetail.setAccessMenu(getAccessMenu());
                        approvalDetail.loadDataApproval();
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_FAILED);
                    }
                }
            }
            clear();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formApprovalProcessMainButtonRejectedKeyPressed

    private void formApprovalProcessMainTableAttachmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formApprovalProcessMainTableAttachmentMouseClicked
        // TODO add your handling code here:
        try {
            int rowSelected = formApprovalProcessMainTableAttachment.getSelectedRow();
            String selectedFileName = formApprovalProcessMainTableAttachment.getValueAt(rowSelected, 2).toString();
            String selectedFilePath = formApprovalProcessMainTableAttachment.getValueAt(rowSelected, 3).toString();
            displayImage(selectedFilePath, selectedFileName);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formApprovalProcessMainTableAttachmentMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ApprovalProcess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ApprovalProcess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ApprovalProcess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ApprovalProcess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ApprovalProcess().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel formApprovalProcessHeaderLabelId;
    public javax.swing.JLabel formApprovalProcessHeaderLabelIdLeave;
    public javax.swing.JLabel formApprovalProcessHeaderLabelNik;
    public javax.swing.JLabel formApprovalProcessHeaderLabelNikLeave;
    private javax.swing.JLabel formApprovalProcessHeaderLable;
    private javax.swing.JButton formApprovalProcessMainButtonApproved;
    private javax.swing.JButton formApprovalProcessMainButtonBack;
    private javax.swing.JButton formApprovalProcessMainButtonLogout;
    private javax.swing.JButton formApprovalProcessMainButtonRejected;
    private javax.swing.JComboBox<String> formApprovalProcessMainComboBoxType;
    private com.toedter.calendar.JDateChooser formApprovalProcessMainDateChooserFrom;
    private com.toedter.calendar.JDateChooser formApprovalProcessMainDateChooserTo;
    private javax.swing.JLabel formApprovalProcessMainLabelFile;
    private javax.swing.JLabel formApprovalProcessMainLabelFrom;
    private javax.swing.JLabel formApprovalProcessMainLabelFullName;
    private javax.swing.JLabel formApprovalProcessMainLabelFullNameUser;
    private javax.swing.JLabel formApprovalProcessMainLabelReasons;
    private javax.swing.JLabel formApprovalProcessMainLabelTo;
    private javax.swing.JPanel formApprovalProcessMainPanelButton;
    private javax.swing.JPanel formApprovalProcessMainPanelFiles;
    private javax.swing.JPanel formApprovalProcessMainPanelForm;
    private javax.swing.JTable formApprovalProcessMainTableAttachment;
    private javax.swing.JTextArea formApprovalProcessMainTextAreaReasons;
    private javax.swing.JTextField formApprovalProcessMainTextFieldFullName;
    private javax.swing.JPanel formApprovalProcessPanelFooter;
    private javax.swing.JPanel formApprovalProcessPanelHeader;
    private javax.swing.JPanel formApprovalProcessPanelMain;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private keeptoo.KGradientPanel kGradientPanel2;
    private keeptoo.KGradientPanel kGradientPanel3;
    // End of variables declaration//GEN-END:variables
}
