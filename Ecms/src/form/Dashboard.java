package form;

import javax.swing.JOptionPane;
import config.Constanta;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import model.Attendance;
import model.Employee;
import model.Leave;
import model.Payslip;
import model.Users;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 *
 */
public final class Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Dashboard() {
        initComponents();
        formDashboardHeaderLabelId.setVisible(false);
        formDashboardHeaderLabelNik.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        formDashboardPanelHeader = new javax.swing.JPanel();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        formDashboardHeaderLable = new javax.swing.JLabel();
        formDashboardPanelFooter = new javax.swing.JPanel();
        kGradientPanel3 = new keeptoo.KGradientPanel();
        formDashboardHeaderLabelId = new javax.swing.JLabel();
        formDashboardHeaderLabelNik = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        formDashboardPanelMain = new javax.swing.JPanel();
        formDashboardMainLabelFullName = new javax.swing.JLabel();
        formDashboardMainButtonLogout = new javax.swing.JButton();
        formDashboardMainButtonEmployee = new javax.swing.JButton();
        formDashboardMainButtonPayslip = new javax.swing.JButton();
        formDashboardMainButtonApproval = new javax.swing.JButton();
        formDashboardMainAttendancePanelTable = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        formDashboardMainAttendanceTable = new javax.swing.JTable();
        formDashboardMainAttendanceCheckin = new javax.swing.JButton();
        formDashboardMainAttendanceCheckout = new javax.swing.JButton();
        formDashboardMainAttendanceViewMore = new javax.swing.JButton();
        formDashboardMainAttendancePanel = new javax.swing.JPanel();
        formDashboardMainAttendanceButtonSearch = new javax.swing.JButton();
        formDashboardMainAttendanceLebelFrom = new javax.swing.JLabel();
        formDashboardMainAttendanceLebelTo = new javax.swing.JLabel();
        formDashboardMainAttendanceJDateChooseFrom = new com.toedter.calendar.JDateChooser();
        formDashboardMainAttendanceJDateChooseTo = new com.toedter.calendar.JDateChooser();
        formDashboardMainLeavePanelTable = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        formDashboardMainLeaveTable = new javax.swing.JTable();
        formDashboardMainLeaveRequest = new javax.swing.JButton();
        formDashboardMainLeaveView = new javax.swing.JButton();
        formDashboardMainLeavePanel = new javax.swing.JPanel();
        formDashboardMainLeaveButtonSearch = new javax.swing.JButton();
        formDashboardMainLeaveLebelFrom = new javax.swing.JLabel();
        formDashboardMainLeaveLebelTo = new javax.swing.JLabel();
        formDashboardMainLeaveJDateChooseFrom = new com.toedter.calendar.JDateChooser();
        formDashboardMainLeaveJDateChooseTo = new com.toedter.calendar.JDateChooser();
        formDashboardMainPayslipPanelTable = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        formDashboardMainPayslipTable = new javax.swing.JTable();
        formDashboardMainPayslipView = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dashboard");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(1280, 720));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setName("frameEmployee"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        formDashboardPanelHeader.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        formDashboardPanelHeader.setPreferredSize(new java.awt.Dimension(1280, 100));

        kGradientPanel2.setkEndColor(new java.awt.Color(51, 153, 255));
        kGradientPanel2.setkGradientFocus(400);
        kGradientPanel2.setkStartColor(new java.awt.Color(0, 204, 204));

        formDashboardHeaderLable.setFont(new java.awt.Font("Roboto Medium", 0, 36)); // NOI18N
        formDashboardHeaderLable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        formDashboardHeaderLable.setIcon(new javax.swing.ImageIcon("D:\\dev\\.project\\ecms\\lib\\logo.png")); // NOI18N

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(formDashboardHeaderLable, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addComponent(formDashboardHeaderLable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        formDashboardHeaderLable.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout formDashboardPanelHeaderLayout = new javax.swing.GroupLayout(formDashboardPanelHeader);
        formDashboardPanelHeader.setLayout(formDashboardPanelHeaderLayout);
        formDashboardPanelHeaderLayout.setHorizontalGroup(
            formDashboardPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        formDashboardPanelHeaderLayout.setVerticalGroup(
            formDashboardPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        getContentPane().add(formDashboardPanelHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
        formDashboardPanelHeader.getAccessibleContext().setAccessibleName("");
        formDashboardPanelHeader.getAccessibleContext().setAccessibleDescription("");

        formDashboardPanelFooter.setPreferredSize(new java.awt.Dimension(1280, 50));

        kGradientPanel3.setkEndColor(new java.awt.Color(51, 153, 255));
        kGradientPanel3.setkGradientFocus(400);
        kGradientPanel3.setkStartColor(new java.awt.Color(0, 204, 204));

        formDashboardHeaderLabelId.setFont(new java.awt.Font("Roboto Light", 0, 8)); // NOI18N
        formDashboardHeaderLabelId.setText("Id");
        formDashboardHeaderLabelId.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        formDashboardHeaderLabelNik.setFont(new java.awt.Font("Roboto Light", 0, 8)); // NOI18N
        formDashboardHeaderLabelNik.setText("Nik");
        formDashboardHeaderLabelNik.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout kGradientPanel3Layout = new javax.swing.GroupLayout(kGradientPanel3);
        kGradientPanel3.setLayout(kGradientPanel3Layout);
        kGradientPanel3Layout.setHorizontalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
            .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kGradientPanel3Layout.createSequentialGroup()
                    .addGap(628, 628, 628)
                    .addComponent(formDashboardHeaderLabelNik)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(formDashboardHeaderLabelId)
                    .addContainerGap(628, Short.MAX_VALUE)))
        );
        kGradientPanel3Layout.setVerticalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
            .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kGradientPanel3Layout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(formDashboardHeaderLabelNik)
                        .addComponent(formDashboardHeaderLabelId))
                    .addContainerGap(25, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout formDashboardPanelFooterLayout = new javax.swing.GroupLayout(formDashboardPanelFooter);
        formDashboardPanelFooter.setLayout(formDashboardPanelFooterLayout);
        formDashboardPanelFooterLayout.setHorizontalGroup(
            formDashboardPanelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        formDashboardPanelFooterLayout.setVerticalGroup(
            formDashboardPanelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(formDashboardPanelFooter, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 660, -1, 60));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(1280, 720));

        formDashboardPanelMain.setBackground(new java.awt.Color(255, 255, 255));

        formDashboardMainLabelFullName.setFont(new java.awt.Font("Roboto Light", 1, 18)); // NOI18N
        formDashboardMainLabelFullName.setText("FullName");

        formDashboardMainButtonLogout.setBackground(new java.awt.Color(255, 255, 255));
        formDashboardMainButtonLogout.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formDashboardMainButtonLogout.setText("Logout");
        formDashboardMainButtonLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formDashboardMainButtonLogoutActionPerformed(evt);
            }
        });
        formDashboardMainButtonLogout.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formDashboardMainButtonLogoutKeyPressed(evt);
            }
        });

        formDashboardMainButtonEmployee.setBackground(new java.awt.Color(255, 255, 255));
        formDashboardMainButtonEmployee.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formDashboardMainButtonEmployee.setText("Employee");
        formDashboardMainButtonEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formDashboardMainButtonEmployeeActionPerformed(evt);
            }
        });
        formDashboardMainButtonEmployee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formDashboardMainButtonEmployeeKeyPressed(evt);
            }
        });

        formDashboardMainButtonPayslip.setBackground(new java.awt.Color(255, 255, 255));
        formDashboardMainButtonPayslip.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formDashboardMainButtonPayslip.setText("Payslip");
        formDashboardMainButtonPayslip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formDashboardMainButtonPayslipActionPerformed(evt);
            }
        });
        formDashboardMainButtonPayslip.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formDashboardMainButtonPayslipKeyPressed(evt);
            }
        });

        formDashboardMainButtonApproval.setBackground(new java.awt.Color(255, 255, 255));
        formDashboardMainButtonApproval.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formDashboardMainButtonApproval.setText("Approval");
        formDashboardMainButtonApproval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formDashboardMainButtonApprovalActionPerformed(evt);
            }
        });
        formDashboardMainButtonApproval.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formDashboardMainButtonApprovalKeyPressed(evt);
            }
        });

        formDashboardMainAttendancePanelTable.setBackground(new java.awt.Color(255, 255, 255));
        formDashboardMainAttendancePanelTable.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Attendance", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Roboto", 0, 11))); // NOI18N
        formDashboardMainAttendancePanelTable.setPreferredSize(new java.awt.Dimension(1231, 240));

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));

        formDashboardMainAttendanceTable.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        formDashboardMainAttendanceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nik", "Full Name", "Check In", "Check Out", "Location", "Duration", "Status", "Information"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        formDashboardMainAttendanceTable.setColumnSelectionAllowed(true);
        formDashboardMainAttendanceTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        formDashboardMainAttendanceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formDashboardMainAttendanceTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(formDashboardMainAttendanceTable);
        formDashboardMainAttendanceTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        formDashboardMainAttendanceCheckin.setBackground(new java.awt.Color(51, 153, 255));
        formDashboardMainAttendanceCheckin.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formDashboardMainAttendanceCheckin.setText("Check In");
        formDashboardMainAttendanceCheckin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formDashboardMainAttendanceCheckinActionPerformed(evt);
            }
        });
        formDashboardMainAttendanceCheckin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formDashboardMainAttendanceCheckinKeyPressed(evt);
            }
        });

        formDashboardMainAttendanceCheckout.setBackground(new java.awt.Color(51, 153, 255));
        formDashboardMainAttendanceCheckout.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formDashboardMainAttendanceCheckout.setText("Check Out");
        formDashboardMainAttendanceCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formDashboardMainAttendanceCheckoutActionPerformed(evt);
            }
        });
        formDashboardMainAttendanceCheckout.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formDashboardMainAttendanceCheckoutKeyPressed(evt);
            }
        });

        formDashboardMainAttendanceViewMore.setBackground(new java.awt.Color(51, 153, 255));
        formDashboardMainAttendanceViewMore.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formDashboardMainAttendanceViewMore.setText("View more");
        formDashboardMainAttendanceViewMore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formDashboardMainAttendanceViewMoreActionPerformed(evt);
            }
        });
        formDashboardMainAttendanceViewMore.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formDashboardMainAttendanceViewMoreKeyPressed(evt);
            }
        });

        formDashboardMainAttendancePanel.setBackground(new java.awt.Color(255, 255, 255));

        formDashboardMainAttendanceButtonSearch.setBackground(new java.awt.Color(51, 153, 255));
        formDashboardMainAttendanceButtonSearch.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formDashboardMainAttendanceButtonSearch.setText("Search");
        formDashboardMainAttendanceButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formDashboardMainAttendanceButtonSearchActionPerformed(evt);
            }
        });
        formDashboardMainAttendanceButtonSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formDashboardMainAttendanceButtonSearchKeyPressed(evt);
            }
        });

        formDashboardMainAttendanceLebelFrom.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formDashboardMainAttendanceLebelFrom.setText("From");

        formDashboardMainAttendanceLebelTo.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formDashboardMainAttendanceLebelTo.setText("To");

        formDashboardMainAttendanceJDateChooseFrom.setBackground(new java.awt.Color(255, 255, 255));
        formDashboardMainAttendanceJDateChooseFrom.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N

        formDashboardMainAttendanceJDateChooseTo.setBackground(new java.awt.Color(255, 255, 255));
        formDashboardMainAttendanceJDateChooseTo.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N

        javax.swing.GroupLayout formDashboardMainAttendancePanelLayout = new javax.swing.GroupLayout(formDashboardMainAttendancePanel);
        formDashboardMainAttendancePanel.setLayout(formDashboardMainAttendancePanelLayout);
        formDashboardMainAttendancePanelLayout.setHorizontalGroup(
            formDashboardMainAttendancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formDashboardMainAttendancePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(formDashboardMainAttendanceLebelFrom)
                .addGap(18, 18, 18)
                .addComponent(formDashboardMainAttendanceJDateChooseFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(formDashboardMainAttendanceLebelTo)
                .addGap(18, 18, 18)
                .addComponent(formDashboardMainAttendanceJDateChooseTo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(formDashboardMainAttendanceButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        formDashboardMainAttendancePanelLayout.setVerticalGroup(
            formDashboardMainAttendancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formDashboardMainAttendancePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(formDashboardMainAttendancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(formDashboardMainAttendanceButtonSearch)
                    .addComponent(formDashboardMainAttendanceJDateChooseTo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(formDashboardMainAttendancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(formDashboardMainAttendanceLebelFrom)
                        .addComponent(formDashboardMainAttendanceLebelTo))
                    .addComponent(formDashboardMainAttendanceJDateChooseFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout formDashboardMainAttendancePanelTableLayout = new javax.swing.GroupLayout(formDashboardMainAttendancePanelTable);
        formDashboardMainAttendancePanelTable.setLayout(formDashboardMainAttendancePanelTableLayout);
        formDashboardMainAttendancePanelTableLayout.setHorizontalGroup(
            formDashboardMainAttendancePanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formDashboardMainAttendancePanelTableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formDashboardMainAttendancePanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(formDashboardMainAttendancePanelTableLayout.createSequentialGroup()
                        .addComponent(formDashboardMainAttendanceCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE)
                        .addComponent(formDashboardMainAttendanceCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146)
                        .addComponent(formDashboardMainAttendanceViewMore, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(formDashboardMainAttendancePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        formDashboardMainAttendancePanelTableLayout.setVerticalGroup(
            formDashboardMainAttendancePanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formDashboardMainAttendancePanelTableLayout.createSequentialGroup()
                .addComponent(formDashboardMainAttendancePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formDashboardMainAttendancePanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(formDashboardMainAttendanceCheckin)
                    .addComponent(formDashboardMainAttendanceViewMore)
                    .addComponent(formDashboardMainAttendanceCheckout))
                .addContainerGap())
        );

        formDashboardMainLeavePanelTable.setBackground(new java.awt.Color(255, 255, 255));
        formDashboardMainLeavePanelTable.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Leave", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Roboto", 0, 11))); // NOI18N
        formDashboardMainLeavePanelTable.setPreferredSize(new java.awt.Dimension(1231, 240));

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));

        formDashboardMainLeaveTable.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        formDashboardMainLeaveTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nik", "Full Name", "Request Date", "Date From", "Date To", "Reasons", "Type", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        formDashboardMainLeaveTable.setColumnSelectionAllowed(true);
        formDashboardMainLeaveTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formDashboardMainLeaveTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(formDashboardMainLeaveTable);
        formDashboardMainLeaveTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        formDashboardMainLeaveRequest.setBackground(new java.awt.Color(51, 153, 255));
        formDashboardMainLeaveRequest.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formDashboardMainLeaveRequest.setText("Request Leave");
        formDashboardMainLeaveRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formDashboardMainLeaveRequestActionPerformed(evt);
            }
        });
        formDashboardMainLeaveRequest.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formDashboardMainLeaveRequestKeyPressed(evt);
            }
        });

        formDashboardMainLeaveView.setBackground(new java.awt.Color(51, 153, 255));
        formDashboardMainLeaveView.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formDashboardMainLeaveView.setText("View more");
        formDashboardMainLeaveView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formDashboardMainLeaveViewActionPerformed(evt);
            }
        });
        formDashboardMainLeaveView.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formDashboardMainLeaveViewKeyPressed(evt);
            }
        });

        formDashboardMainLeavePanel.setBackground(new java.awt.Color(255, 255, 255));

        formDashboardMainLeaveButtonSearch.setBackground(new java.awt.Color(51, 153, 255));
        formDashboardMainLeaveButtonSearch.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formDashboardMainLeaveButtonSearch.setText("Search");
        formDashboardMainLeaveButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formDashboardMainLeaveButtonSearchActionPerformed(evt);
            }
        });
        formDashboardMainLeaveButtonSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formDashboardMainLeaveButtonSearchKeyPressed(evt);
            }
        });

        formDashboardMainLeaveLebelFrom.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formDashboardMainLeaveLebelFrom.setText("From");

        formDashboardMainLeaveLebelTo.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formDashboardMainLeaveLebelTo.setText("To");

        formDashboardMainLeaveJDateChooseFrom.setBackground(new java.awt.Color(255, 255, 255));
        formDashboardMainLeaveJDateChooseFrom.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N

        formDashboardMainLeaveJDateChooseTo.setBackground(new java.awt.Color(255, 255, 255));
        formDashboardMainLeaveJDateChooseTo.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N

        javax.swing.GroupLayout formDashboardMainLeavePanelLayout = new javax.swing.GroupLayout(formDashboardMainLeavePanel);
        formDashboardMainLeavePanel.setLayout(formDashboardMainLeavePanelLayout);
        formDashboardMainLeavePanelLayout.setHorizontalGroup(
            formDashboardMainLeavePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formDashboardMainLeavePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(formDashboardMainLeaveLebelFrom)
                .addGap(18, 18, 18)
                .addComponent(formDashboardMainLeaveJDateChooseFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(formDashboardMainLeaveLebelTo)
                .addGap(18, 18, 18)
                .addComponent(formDashboardMainLeaveJDateChooseTo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(formDashboardMainLeaveButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        formDashboardMainLeavePanelLayout.setVerticalGroup(
            formDashboardMainLeavePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formDashboardMainLeavePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(formDashboardMainLeavePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(formDashboardMainLeaveButtonSearch)
                    .addComponent(formDashboardMainLeaveJDateChooseTo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(formDashboardMainLeavePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(formDashboardMainLeaveLebelFrom)
                        .addComponent(formDashboardMainLeaveLebelTo))
                    .addComponent(formDashboardMainLeaveJDateChooseFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout formDashboardMainLeavePanelTableLayout = new javax.swing.GroupLayout(formDashboardMainLeavePanelTable);
        formDashboardMainLeavePanelTable.setLayout(formDashboardMainLeavePanelTableLayout);
        formDashboardMainLeavePanelTableLayout.setHorizontalGroup(
            formDashboardMainLeavePanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formDashboardMainLeavePanelTableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formDashboardMainLeavePanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(formDashboardMainLeavePanelTableLayout.createSequentialGroup()
                        .addComponent(formDashboardMainLeaveRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(formDashboardMainLeaveView, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(formDashboardMainLeavePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        formDashboardMainLeavePanelTableLayout.setVerticalGroup(
            formDashboardMainLeavePanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formDashboardMainLeavePanelTableLayout.createSequentialGroup()
                .addComponent(formDashboardMainLeavePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formDashboardMainLeavePanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(formDashboardMainLeaveRequest)
                    .addComponent(formDashboardMainLeaveView))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        formDashboardMainPayslipPanelTable.setBackground(new java.awt.Color(255, 255, 255));
        formDashboardMainPayslipPanelTable.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Payslip", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Roboto", 0, 11))); // NOI18N
        formDashboardMainPayslipPanelTable.setPreferredSize(new java.awt.Dimension(1231, 240));

        jScrollPane4.setBackground(new java.awt.Color(255, 255, 255));

        formDashboardMainPayslipTable.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        formDashboardMainPayslipTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nik", "Full Name", "Periode", "Net Salary", "Total Working"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        formDashboardMainPayslipTable.setColumnSelectionAllowed(true);
        jScrollPane4.setViewportView(formDashboardMainPayslipTable);
        formDashboardMainPayslipTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        formDashboardMainPayslipView.setBackground(new java.awt.Color(51, 153, 255));
        formDashboardMainPayslipView.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formDashboardMainPayslipView.setText("View more");
        formDashboardMainPayslipView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formDashboardMainPayslipViewActionPerformed(evt);
            }
        });
        formDashboardMainPayslipView.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formDashboardMainPayslipViewKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout formDashboardMainPayslipPanelTableLayout = new javax.swing.GroupLayout(formDashboardMainPayslipPanelTable);
        formDashboardMainPayslipPanelTable.setLayout(formDashboardMainPayslipPanelTableLayout);
        formDashboardMainPayslipPanelTableLayout.setHorizontalGroup(
            formDashboardMainPayslipPanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formDashboardMainPayslipPanelTableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formDashboardMainPayslipPanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addComponent(formDashboardMainPayslipView, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        formDashboardMainPayslipPanelTableLayout.setVerticalGroup(
            formDashboardMainPayslipPanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formDashboardMainPayslipPanelTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(formDashboardMainPayslipView)
                .addContainerGap())
        );

        javax.swing.GroupLayout formDashboardPanelMainLayout = new javax.swing.GroupLayout(formDashboardPanelMain);
        formDashboardPanelMain.setLayout(formDashboardPanelMainLayout);
        formDashboardPanelMainLayout.setHorizontalGroup(
            formDashboardPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formDashboardPanelMainLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(formDashboardMainLabelFullName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(formDashboardMainButtonApproval, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(formDashboardMainButtonPayslip, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(formDashboardMainButtonEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(formDashboardMainButtonLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formDashboardPanelMainLayout.createSequentialGroup()
                .addComponent(formDashboardMainAttendancePanelTable, javax.swing.GroupLayout.DEFAULT_SIZE, 1251, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formDashboardPanelMainLayout.createSequentialGroup()
                .addComponent(formDashboardMainPayslipPanelTable, javax.swing.GroupLayout.DEFAULT_SIZE, 1251, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formDashboardPanelMainLayout.createSequentialGroup()
                .addComponent(formDashboardMainLeavePanelTable, javax.swing.GroupLayout.DEFAULT_SIZE, 1251, Short.MAX_VALUE)
                .addContainerGap())
        );
        formDashboardPanelMainLayout.setVerticalGroup(
            formDashboardPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formDashboardPanelMainLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(formDashboardPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(formDashboardMainButtonLogout)
                    .addComponent(formDashboardMainLabelFullName)
                    .addComponent(formDashboardMainButtonEmployee)
                    .addComponent(formDashboardMainButtonPayslip)
                    .addComponent(formDashboardMainButtonApproval))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(formDashboardMainAttendancePanelTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(formDashboardMainLeavePanelTable, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(formDashboardMainPayslipPanelTable, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(formDashboardPanelMain);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, -1, 560));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    LocalDateTime localDateTimeNow = LocalDateTime.now();
    DateTimeFormatter DATETIME_FORMATTER = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
    private List<String> access_menu = new ArrayList<>();
    private String full_name;

    public void setLabelId(String text) {
        formDashboardHeaderLabelId.setText(text);
        setMenuAccess();
    }

    public String getLabelId() {
        return formDashboardHeaderLabelId.getText();
    }

    public void setLabelNik(String text) {
        formDashboardHeaderLabelNik.setText(text);
    }

    public String getFullName() {
        return full_name;
    }

    public void setFullName(String text) {
        this.full_name = text;
        formDashboardMainLabelFullName.setText("Welcome " + text + ",");
    }

    public List<String> getAccessMenu() {
        return access_menu;
    }

    public void setAccessMenu(List<String> value) {
        this.access_menu = value;
    }

    public void setMenuAccess() {
        try {
            Users users = new Users();
            users = users.get(getLabelId());
            switch (users.getIdRole()) {
                case Constanta.Role.ADMINISTRATOR:
                    formDashboardMainButtonApproval.setEnabled(false);
                    formDashboardMainButtonPayslip.setEnabled(false);
                    formDashboardMainButtonEmployee.setEnabled(true);
                    break;
                case Constanta.Role.HRD:
                    formDashboardMainButtonApproval.setEnabled(true);
                    formDashboardMainButtonPayslip.setEnabled(true);
                    formDashboardMainButtonEmployee.setEnabled(false);
                    break;
                default:
                    formDashboardMainButtonApproval.setEnabled(false);
                    formDashboardMainButtonPayslip.setEnabled(false);
                    formDashboardMainButtonEmployee.setEnabled(false);
                    break;
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }

    public void loadDataAttendance() {
        try {
            List<Attendance> listAttendance;
            if (formDashboardHeaderLabelNik.getText().equals("hrd")
                    || formDashboardHeaderLabelNik.getText().equals("admin")) {
                listAttendance = Attendance.listParams()
                        .withUsername("")
                        .withDateFrom(null)
                        .withDateTo(null)
                        .build();
            } else {
                listAttendance = Attendance.listParams()
                        .withUsername(getFullName())
                        .withDateFrom(null)
                        .withDateTo(null)
                        .build();
            }

            DefaultTableModel defaultTableModel = (DefaultTableModel) formDashboardMainAttendanceTable.getModel();
            defaultTableModel.setRowCount(0);
            Object[] rows = new Object[9];
            for (int i = 0; i < listAttendance.size(); i++) {
                TableColumnModel tableColumnModel = formDashboardMainAttendanceTable.getColumnModel();
                tableColumnModel.getColumn(0).setMaxWidth(0);
                tableColumnModel.getColumn(0).setMinWidth(0);

                rows[0] = listAttendance.get(i).getId();
                rows[1] = listAttendance.get(i).getUsername();
                rows[2] = listAttendance.get(i).getFullName();
                rows[3] = listAttendance.get(i).getCheckIn();
                rows[4] = listAttendance.get(i).getCheckOut();
                rows[5] = listAttendance.get(i).getLocation();
                rows[6] = String.format("%.0f", listAttendance.get(i).getDuration());
                rows[7] = listAttendance.get(i).getStatus();
                rows[8] = listAttendance.get(i).getInformation();

                defaultTableModel.addRow(rows);
            }
            formDashboardMainAttendanceTable.setAutoCreateRowSorter(true);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }

    public void searchDataAttendance() {
        try {
            Date dateFrom = formDashboardMainAttendanceJDateChooseFrom.getDate();
            Date dateTo = formDashboardMainAttendanceJDateChooseTo.getDate();
            SimpleDateFormat simpleDateFormatFrom = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            SimpleDateFormat simpleDateFormatTo = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

            String date_from = null;
            String date_to = null;

            if (dateFrom != null && dateTo != null) {
                date_from = simpleDateFormatFrom.format(dateFrom);
                date_to = simpleDateFormatTo.format(dateTo);
            }

            List<Attendance> listAttendance;
            if (formDashboardHeaderLabelNik.getText().equals("hrd")
                    || formDashboardHeaderLabelNik.getText().equals("admin")) {
                listAttendance = Attendance.listParams()
                        .withUsername("")
                        .withDateFrom(date_from)
                        .withDateTo(date_to)
                        .build();
            } else {
                listAttendance = Attendance.listParams()
                        .withUsername(getFullName())
                        .withDateFrom(date_from)
                        .withDateTo(date_to)
                        .build();
            }

            DefaultTableModel defaultTableModel = (DefaultTableModel) formDashboardMainAttendanceTable.getModel();
            defaultTableModel.setRowCount(0);
            Object[] rows = new Object[9];
            for (int i = 0; i < listAttendance.size(); i++) {
                TableColumnModel tableColumnModel = formDashboardMainAttendanceTable.getColumnModel();
                tableColumnModel.getColumn(0).setMaxWidth(0);
                tableColumnModel.getColumn(0).setMinWidth(0);

                rows[0] = listAttendance.get(i).getId();
                rows[1] = listAttendance.get(i).getUsername();
                rows[2] = listAttendance.get(i).getFullName();
                rows[3] = listAttendance.get(i).getCheckIn();
                rows[4] = listAttendance.get(i).getCheckOut();
                rows[5] = listAttendance.get(i).getLocation();
                rows[6] = String.format("%.0f", listAttendance.get(i).getDuration());
                rows[7] = listAttendance.get(i).getStatus();
                rows[8] = listAttendance.get(i).getInformation();

                defaultTableModel.addRow(rows);
            }
            formDashboardMainAttendanceTable.setAutoCreateRowSorter(true);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }

    public void loadDataLeave() {
        try {
            List<Leave> listLeave;
            if (formDashboardHeaderLabelNik.getText().equals("hrd")
                    || formDashboardHeaderLabelNik.getText().equals("admin")) {
                listLeave = Leave.listParams()
                        .withUsername("")
                        .withStatus(Constanta.Leave.ALL)
                        .withDateFrom(null)
                        .withDateTo(null)
                        .buildApproval();
            } else {
                listLeave = Leave.listParams()
                        .withUsername(getFullName())
                        .withDateFrom(null)
                        .withDateTo(null)
                        .build();
            }

            DefaultTableModel defaultTableModel = (DefaultTableModel) formDashboardMainLeaveTable.getModel();
            defaultTableModel.setRowCount(0);
            Object[] rows = new Object[9];
            for (int i = 0; i < listLeave.size(); i++) {
                TableColumnModel tableColumnModel = formDashboardMainLeaveTable.getColumnModel();
                tableColumnModel.getColumn(0).setMaxWidth(0);
                tableColumnModel.getColumn(0).setMinWidth(0);

                rows[0] = listLeave.get(i).getId();
                rows[1] = listLeave.get(i).getUsername();
                rows[2] = listLeave.get(i).getFullName();
                rows[3] = listLeave.get(i).getRequestDate();
                rows[4] = listLeave.get(i).getDateFrom();
                rows[5] = listLeave.get(i).getDateTo();
                rows[6] = listLeave.get(i).getReasons();
                rows[7] = listLeave.get(i).getTypeName();
                rows[8] = listLeave.get(i).getStatus();

                defaultTableModel.addRow(rows);
            }
            formDashboardMainLeaveTable.setAutoCreateRowSorter(true);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }

    public void searchDataLeave() {
        try {
            Date dateFrom = formDashboardMainLeaveJDateChooseFrom.getDate();
            Date dateTo = formDashboardMainLeaveJDateChooseTo.getDate();
            SimpleDateFormat simpleDateFormatFrom = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            SimpleDateFormat simpleDateFormatTo = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

            String date_from = null;
            String date_to = null;

            if (dateFrom != null && dateTo != null) {
                date_from = simpleDateFormatFrom.format(dateFrom);
                date_to = simpleDateFormatTo.format(dateTo);
            }

            List<Leave> listLeave;
            if (formDashboardHeaderLabelNik.getText().equals("hrd")
                    || formDashboardHeaderLabelNik.getText().equals("admin")) {
                listLeave = Leave.listParams()
                        .withUsername("")
                        .withDateFrom(date_from)
                        .withDateTo(date_to)
                        .build();
            } else {
                listLeave = Leave.listParams()
                        .withUsername(getFullName())
                        .withDateFrom(date_from)
                        .withDateTo(date_to)
                        .build();
            }

            DefaultTableModel defaultTableModel = (DefaultTableModel) formDashboardMainLeaveTable.getModel();
            defaultTableModel.setRowCount(0);
            Object[] rows = new Object[9];
            
            TableColumnModel tableColumnModel = formDashboardMainPayslipTable.getColumnModel();
            tableColumnModel.getColumn(0).setMaxWidth(0);
            tableColumnModel.getColumn(0).setMinWidth(0);
            
            for (int i = 0; i < listLeave.size(); i++) {
                rows[0] = listLeave.get(i).getId();
                rows[1] = listLeave.get(i).getUsername();
                rows[2] = listLeave.get(i).getFullName();
                rows[3] = listLeave.get(i).getRequestDate();
                rows[4] = listLeave.get(i).getDateFrom();
                rows[5] = listLeave.get(i).getDateTo();
                rows[6] = listLeave.get(i).getReasons();
                rows[7] = listLeave.get(i).getTypeName();
                rows[8] = listLeave.get(i).getStatus();

                defaultTableModel.addRow(rows);
            }
            formDashboardMainLeaveTable.setAutoCreateRowSorter(true);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }
    
    public void loadDataPayslip() {
        try {
            List<Payslip> listPayslip;
            if (formDashboardHeaderLabelNik.getText().equals("hrd")
                    || formDashboardHeaderLabelNik.getText().equals("admin")) {
                listPayslip = Payslip.listParams()
                        .withUsername("")
                        .withPeriode(null)
                        .build();
            } else {
                listPayslip = Payslip.listParams()
                        .withUsername(formDashboardHeaderLabelNik.getText())
                        .withPeriode(null)
                        .get();
            }

            DefaultTableModel defaultTableModel = (DefaultTableModel) formDashboardMainPayslipTable.getModel();
            defaultTableModel.setRowCount(0);
            Object[] rows = new Object[6];
            
            TableColumnModel tableColumnModel = formDashboardMainPayslipTable.getColumnModel();
            tableColumnModel.getColumn(0).setMaxWidth(0);
            tableColumnModel.getColumn(0).setMinWidth(0);
            
            for (int i = 0; i < listPayslip.size(); i++) {
                rows[0] = listPayslip.get(i).getId();
                rows[1] = listPayslip.get(i).getUsername();
                rows[2] = listPayslip.get(i).getFullName();
                rows[3] = listPayslip.get(i).getPeriode();
                rows[4] = String.format("%.0f", listPayslip.get(i).getNetSalary());
                rows[5] = String.format("%.0f", listPayslip.get(i).getWorkingHour() + listPayslip.get(i).getOvertimeHour());

                defaultTableModel.addRow(rows);
            }
            formDashboardMainPayslipTable.setAutoCreateRowSorter(true);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }

    private boolean checkIn() throws SQLException {
        boolean result;

        Attendance attendance = new Attendance();
        attendance.setUsername(formDashboardHeaderLabelNik.getText());
        attendance.setCheckIn(localDateTimeNow.format(DATETIME_FORMATTER));
        attendance.setLocation(Constanta.Default.DEFAULT_LOCATION);
        attendance.setStatus(Constanta.Default.DEFAULT_CHECKIN_STATUS);
        attendance.setInformation(String.format(Constanta.Default.DEFAULT_CHECKIN_INFORMATION,
                getFullName(),
                localDateTimeNow.format(DATETIME_FORMATTER),
                Constanta.Default.DEFAULT_LOCATION));
        result = attendance.checkIn(attendance);

        return result;
    }

    private boolean checkOut(Attendance attendance) throws SQLException {
        boolean result;

        attendance.setId(attendance.getId());
        attendance.setInformation(String.format(Constanta.Default.DEFAULT_CHECKOUT_INFORMATION,
                getFullName(),
                localDateTimeNow.format(DATETIME_FORMATTER),
                Constanta.Default.DEFAULT_LOCATION,
                "0"));
        result = attendance.checkOut(attendance);

        return result;
    }

    private void formDashboardMainAttendanceTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formDashboardMainAttendanceTableMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_formDashboardMainAttendanceTableMouseClicked

    private void formDashboardMainButtonLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formDashboardMainButtonLogoutActionPerformed
        // TODO add your handling code here:
        try {
            int action = JOptionPane.showConfirmDialog(null,
                    Constanta.Messages.MESSAGE_CONFIRM_LOGOUT,
                    Constanta.Messages.BANNER_CONFIRM,
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);

            if (action == JOptionPane.YES_OPTION) {
                Login login = new Login();
                login.show();
                this.dispose();
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainButtonLogoutActionPerformed

    private void formDashboardMainButtonLogoutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formDashboardMainButtonLogoutKeyPressed
        // TODO add your handling code here:
        try {
            int action = JOptionPane.showConfirmDialog(null,
                    Constanta.Messages.MESSAGE_CONFIRM_LOGOUT,
                    Constanta.Messages.BANNER_CONFIRM,
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);

            if (action == JOptionPane.YES_OPTION) {
                Login login = new Login();
                login.show();
                this.dispose();
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainButtonLogoutKeyPressed

    private void formDashboardMainButtonEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formDashboardMainButtonEmployeeActionPerformed
        // TODO add your handling code here:
        try {
            EmployeeManagement employeeManagement = new EmployeeManagement();
            employeeManagement.show(true);
            employeeManagement.setLabelId(formDashboardHeaderLabelId.getText());
            employeeManagement.setLabelNik(formDashboardHeaderLabelNik.getText());
            employeeManagement.setFullName(getFullName());
            employeeManagement.setAccessMenu(getAccessMenu());
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainButtonEmployeeActionPerformed

    private void formDashboardMainButtonEmployeeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formDashboardMainButtonEmployeeKeyPressed
        // TODO add your handling code here:
        try {
            EmployeeManagement employeeManagement = new EmployeeManagement();
            employeeManagement.show(true);
            employeeManagement.setLabelId(formDashboardHeaderLabelId.getText());
            employeeManagement.setLabelNik(formDashboardHeaderLabelNik.getText());
            employeeManagement.setFullName(getFullName());
            employeeManagement.setAccessMenu(getAccessMenu());
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainButtonEmployeeKeyPressed

    private void formDashboardMainButtonPayslipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formDashboardMainButtonPayslipActionPerformed
        // TODO add your handling code here:
        try {
            EmployeePayslipList employeePayslipList = new EmployeePayslipList();
            employeePayslipList.show(true);
            employeePayslipList.setLabelId(formDashboardHeaderLabelId.getText());
            employeePayslipList.setLabelNik(formDashboardHeaderLabelNik.getText());
            employeePayslipList.setFullName(getFullName());
            employeePayslipList.setAccessMenu(getAccessMenu());
            employeePayslipList.loadData();
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainButtonPayslipActionPerformed

    private void formDashboardMainButtonPayslipKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formDashboardMainButtonPayslipKeyPressed
        // TODO add your handling code here:
        try {
            EmployeePayslipList employeePayslipList = new EmployeePayslipList();
            employeePayslipList.show(true);
            employeePayslipList.setLabelId(formDashboardHeaderLabelId.getText());
            employeePayslipList.setLabelNik(formDashboardHeaderLabelNik.getText());
            employeePayslipList.setFullName(getFullName());
            employeePayslipList.setAccessMenu(getAccessMenu());
            employeePayslipList.loadData();
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainButtonPayslipKeyPressed

    private void formDashboardMainButtonApprovalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formDashboardMainButtonApprovalActionPerformed
        // TODO add your handling code here:        
        try {
            ApprovalDetail approvalDetail = new ApprovalDetail();
            approvalDetail.show(true);
            approvalDetail.setLabelId(formDashboardHeaderLabelId.getText());
            approvalDetail.setLabelNik(formDashboardHeaderLabelNik.getText());
            approvalDetail.setFullName(getFullName());
            approvalDetail.setAccessMenu(getAccessMenu());
            approvalDetail.loadDataApproval();
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainButtonApprovalActionPerformed

    private void formDashboardMainButtonApprovalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formDashboardMainButtonApprovalKeyPressed
        // TODO add your handling code here:
        try {
            ApprovalDetail approvalDetail = new ApprovalDetail();
            approvalDetail.show(true);
            approvalDetail.setLabelId(formDashboardHeaderLabelId.getText());
            approvalDetail.setLabelNik(formDashboardHeaderLabelNik.getText());
            approvalDetail.setFullName(getFullName());
            approvalDetail.setAccessMenu(getAccessMenu());
            approvalDetail.loadDataApproval();
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainButtonApprovalKeyPressed

    private void formDashboardMainLeaveTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formDashboardMainLeaveTableMouseClicked
        // TODO add your handling code here:
        try {
            Leave leave = new Leave();
            LeaveRequest leaveRequest = new LeaveRequest();
            int rowSelected = formDashboardMainLeaveTable.getSelectedRow();
            int selectedId = Integer.parseInt(formDashboardMainLeaveTable.getValueAt(rowSelected, 0).toString());

            leave = leave.get(selectedId);
            leaveRequest.show(true);
            leaveRequest.assignValue(leave);
            leaveRequest.setLabelId(formDashboardHeaderLabelId.getText());
            leaveRequest.setLabelNik(formDashboardHeaderLabelNik.getText());
            leaveRequest.setFullName(getFullName());
            leaveRequest.setAccessMenu(getAccessMenu());
            leaveRequest.loadDataAttachment(leave.getListAttachment());
            this.dispose();
        } catch (NumberFormatException | SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainLeaveTableMouseClicked

    private void formDashboardMainAttendanceCheckinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formDashboardMainAttendanceCheckinActionPerformed
        // TODO add your handling code here:
        try {
            Attendance attendance = new Attendance();
            Attendance result = attendance.getCurrentCheckIn(formDashboardHeaderLabelNik.getText());
            if (result.getId() == null) {
                if (checkIn()) {
                    JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_SUCCESS);
                } else {
                    JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_FAILED);
                }
            } else {
                JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ALREADY_CHECKIN);
            }
            loadDataAttendance();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainAttendanceCheckinActionPerformed

    private void formDashboardMainAttendanceCheckinKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formDashboardMainAttendanceCheckinKeyPressed
        // TODO add your handling code here:
        try {
            Attendance attendance = new Attendance();
            Attendance result = attendance.getCurrentCheckIn(formDashboardHeaderLabelNik.getText());
            if (result.getId() == null) {
                if (checkIn()) {
                    JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_SUCCESS);
                } else {
                    JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_FAILED);
                }
            } else {
                JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ALREADY_CHECKIN);
            }
            loadDataAttendance();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainAttendanceCheckinKeyPressed

    private void formDashboardMainAttendanceCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formDashboardMainAttendanceCheckoutActionPerformed
        // TODO add your handling code here:
        try {
            Attendance attendance = new Attendance();
            Attendance result = attendance.getCurrentCheckIn(formDashboardHeaderLabelNik.getText());
            if (result.getId() != null) {
                if (checkOut(result)) {
                    JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_SUCCESS);
                } else {
                    JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_FAILED);
                }
            } else {
                JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ALREADY_CHECKOUT);
            }
            loadDataAttendance();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainAttendanceCheckoutActionPerformed

    private void formDashboardMainAttendanceCheckoutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formDashboardMainAttendanceCheckoutKeyPressed
        // TODO add your handling code here:
        try {
            Attendance attendance = new Attendance();
            Attendance result = attendance.getCurrentCheckIn(formDashboardHeaderLabelNik.getText());
            if (result.getId() != null) {
                if (checkOut(result)) {
                    JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_SUCCESS);
                } else {
                    JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_FAILED);
                }
            } else {
                JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ALREADY_CHECKOUT);
            }
            loadDataAttendance();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainAttendanceCheckoutKeyPressed

    private void formDashboardMainAttendanceButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formDashboardMainAttendanceButtonSearchActionPerformed
        // TODO add your handling code here:
        try {
            searchDataAttendance();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainAttendanceButtonSearchActionPerformed

    private void formDashboardMainAttendanceButtonSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formDashboardMainAttendanceButtonSearchKeyPressed
        // TODO add your handling code here:
        try {
            searchDataAttendance();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainAttendanceButtonSearchKeyPressed

    private void formDashboardMainLeaveButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formDashboardMainLeaveButtonSearchActionPerformed
        // TODO add your handling code here:
        try {
            searchDataLeave();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainLeaveButtonSearchActionPerformed

    private void formDashboardMainLeaveButtonSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formDashboardMainLeaveButtonSearchKeyPressed
        // TODO add your handling code here:
        try {
            searchDataLeave();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainLeaveButtonSearchKeyPressed

    private void formDashboardMainAttendanceViewMoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formDashboardMainAttendanceViewMoreActionPerformed
        // TODO add your handling code here:
        try {
            AttendanceDetail attendanceDetail = new AttendanceDetail();
            attendanceDetail.show(true);
            attendanceDetail.setLabelId(formDashboardHeaderLabelId.getText());
            attendanceDetail.setLabelNik(formDashboardHeaderLabelNik.getText());
            attendanceDetail.setFullName(getFullName());
            attendanceDetail.setAccessMenu(getAccessMenu());
            attendanceDetail.loadDataAttendance();
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainAttendanceViewMoreActionPerformed

    private void formDashboardMainAttendanceViewMoreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formDashboardMainAttendanceViewMoreKeyPressed
        // TODO add your handling code here:
        try {
            AttendanceDetail attendanceDetail = new AttendanceDetail();
            attendanceDetail.show(true);
            attendanceDetail.setLabelId(formDashboardHeaderLabelId.getText());
            attendanceDetail.setLabelNik(formDashboardHeaderLabelNik.getText());
            attendanceDetail.setFullName(getFullName());
            attendanceDetail.setAccessMenu(getAccessMenu());
            attendanceDetail.loadDataAttendance();
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainAttendanceViewMoreKeyPressed

    private void formDashboardMainLeaveViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formDashboardMainLeaveViewActionPerformed
        // TODO add your handling code here:
        try {
            LeaveDetail leaveDetail = new LeaveDetail();
            leaveDetail.show(true);
            leaveDetail.setLabelId(formDashboardHeaderLabelId.getText());
            leaveDetail.setLabelNik(formDashboardHeaderLabelNik.getText());
            leaveDetail.setFullName(getFullName());
            leaveDetail.setAccessMenu(getAccessMenu());
            leaveDetail.loadDataLeave();
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainLeaveViewActionPerformed

    private void formDashboardMainLeaveViewKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formDashboardMainLeaveViewKeyPressed
        // TODO add your handling code here:
        try {
            LeaveDetail leaveDetail = new LeaveDetail();
            leaveDetail.show(true);
            leaveDetail.setLabelId(formDashboardHeaderLabelId.getText());
            leaveDetail.setLabelNik(formDashboardHeaderLabelNik.getText());
            leaveDetail.setFullName(getFullName());
            leaveDetail.setAccessMenu(getAccessMenu());
            leaveDetail.loadDataLeave();
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainLeaveViewKeyPressed

    private void formDashboardMainLeaveRequestKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formDashboardMainLeaveRequestKeyPressed
        // TODO add your handling code here:
        try {
            LeaveRequest leaveRequest = new LeaveRequest();
            leaveRequest.show(true);
            leaveRequest.setLabelId(formDashboardHeaderLabelId.getText());
            leaveRequest.setLabelNik(formDashboardHeaderLabelNik.getText());
            leaveRequest.setFullName(getFullName());
            leaveRequest.setAccessMenu(getAccessMenu());
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainLeaveRequestKeyPressed

    private void formDashboardMainLeaveRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formDashboardMainLeaveRequestActionPerformed
        // TODO add your handling code here:
        try {
            LeaveRequest leaveRequest = new LeaveRequest();
            leaveRequest.show(true);
            leaveRequest.setLabelId(formDashboardHeaderLabelId.getText());
            leaveRequest.setLabelNik(formDashboardHeaderLabelNik.getText());
            leaveRequest.setFullName(getFullName());
            leaveRequest.setAccessMenu(getAccessMenu());
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainLeaveRequestActionPerformed

    private void formDashboardMainPayslipViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formDashboardMainPayslipViewActionPerformed
        // TODO add your handling code here:
        try {
            PayslipDetail payslipDetail = new PayslipDetail();
            payslipDetail.show(true);
            payslipDetail.setLabelId(formDashboardHeaderLabelId.getText());
            payslipDetail.setLabelNik(formDashboardHeaderLabelNik.getText());
            payslipDetail.setFullName(getFullName());
            payslipDetail.setAccessMenu(getAccessMenu());
            payslipDetail.loadDataPayslip();
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainPayslipViewActionPerformed

    private void formDashboardMainPayslipViewKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formDashboardMainPayslipViewKeyPressed
        // TODO add your handling code here:
        try {
            PayslipDetail payslipDetail = new PayslipDetail();
            payslipDetail.show(true);
            payslipDetail.setLabelId(formDashboardHeaderLabelId.getText());
            payslipDetail.setLabelNik(formDashboardHeaderLabelNik.getText());
            payslipDetail.setFullName(getFullName());
            payslipDetail.setAccessMenu(getAccessMenu());
            payslipDetail.loadDataPayslip();
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formDashboardMainPayslipViewKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel formDashboardHeaderLabelId;
    public javax.swing.JLabel formDashboardHeaderLabelNik;
    private javax.swing.JLabel formDashboardHeaderLable;
    private javax.swing.JButton formDashboardMainAttendanceButtonSearch;
    private javax.swing.JButton formDashboardMainAttendanceCheckin;
    private javax.swing.JButton formDashboardMainAttendanceCheckout;
    private com.toedter.calendar.JDateChooser formDashboardMainAttendanceJDateChooseFrom;
    private com.toedter.calendar.JDateChooser formDashboardMainAttendanceJDateChooseTo;
    private javax.swing.JLabel formDashboardMainAttendanceLebelFrom;
    private javax.swing.JLabel formDashboardMainAttendanceLebelTo;
    private javax.swing.JPanel formDashboardMainAttendancePanel;
    private javax.swing.JPanel formDashboardMainAttendancePanelTable;
    private javax.swing.JTable formDashboardMainAttendanceTable;
    private javax.swing.JButton formDashboardMainAttendanceViewMore;
    private javax.swing.JButton formDashboardMainButtonApproval;
    private javax.swing.JButton formDashboardMainButtonEmployee;
    private javax.swing.JButton formDashboardMainButtonLogout;
    private javax.swing.JButton formDashboardMainButtonPayslip;
    private javax.swing.JLabel formDashboardMainLabelFullName;
    private javax.swing.JButton formDashboardMainLeaveButtonSearch;
    private com.toedter.calendar.JDateChooser formDashboardMainLeaveJDateChooseFrom;
    private com.toedter.calendar.JDateChooser formDashboardMainLeaveJDateChooseTo;
    private javax.swing.JLabel formDashboardMainLeaveLebelFrom;
    private javax.swing.JLabel formDashboardMainLeaveLebelTo;
    private javax.swing.JPanel formDashboardMainLeavePanel;
    private javax.swing.JPanel formDashboardMainLeavePanelTable;
    private javax.swing.JButton formDashboardMainLeaveRequest;
    private javax.swing.JTable formDashboardMainLeaveTable;
    private javax.swing.JButton formDashboardMainLeaveView;
    private javax.swing.JPanel formDashboardMainPayslipPanelTable;
    private javax.swing.JTable formDashboardMainPayslipTable;
    private javax.swing.JButton formDashboardMainPayslipView;
    private javax.swing.JPanel formDashboardPanelFooter;
    private javax.swing.JPanel formDashboardPanelHeader;
    private javax.swing.JPanel formDashboardPanelMain;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private keeptoo.KGradientPanel kGradientPanel2;
    private keeptoo.KGradientPanel kGradientPanel3;
    // End of variables declaration//GEN-END:variables
}
