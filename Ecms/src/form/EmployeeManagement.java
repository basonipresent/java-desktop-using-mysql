package form;

import javax.swing.JOptionPane;
import config.Constanta;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.TreeMap;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import model.Employee;
import model.Nationality;
import model.Position;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 *  
 */
public class EmployeeManagement extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public EmployeeManagement() {
        initComponents();
        formEmployeeHeaderLabelId.setVisible(false);
        formEmployeeHeaderLabelNik.setVisible(false);
        formEmployeeHeaderLabelIsUpdate.setVisible(false);
        formEmployeeHeaderLabelIdEmployee.setVisible(false);
        formEmployeeMainButtonDelete.setVisible(false);
        formEmployeeHeaderLabelIsUpdate.setText(Constanta.Default.DEFAULT_VALUE);
        formEmployeeHeaderLabelIdEmployee.setText(Constanta.Default.DEFAULT_VALUE);
        bindDataPosition();
        bindDataStatus();
        bindDataEducation();
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        formEmployeePanelHeader = new javax.swing.JPanel();
        formEmployeeHeaderLable = new javax.swing.JLabel();
        formEmployeeHeaderLabelId = new javax.swing.JLabel();
        formEmployeeHeaderLabelIsUpdate = new javax.swing.JLabel();
        formEmployeeHeaderLabelIdEmployee = new javax.swing.JLabel();
        formEmployeeHeaderLabelNik = new javax.swing.JLabel();
        formEmployeePanelFooter = new javax.swing.JPanel();
        formEmployeeLabelFooter2 = new javax.swing.JLabel();
        formEmployeePanelMain = new javax.swing.JPanel();
        formEmployeeMainLabelFullName = new javax.swing.JLabel();
        formEmployeeMainLabelNik = new javax.swing.JLabel();
        formEmployeeMainLabelFirstName = new javax.swing.JLabel();
        formEmployeeMainLabelLastName = new javax.swing.JLabel();
        formEmployeeMainLabelPosition = new javax.swing.JLabel();
        formEmployeeMainLabelEducation = new javax.swing.JLabel();
        formEmployeeMainLabelSalary = new javax.swing.JLabel();
        formEmployeeMainLabelAddress = new javax.swing.JLabel();
        formEmployeeMainLabelCity = new javax.swing.JLabel();
        formEmployeeMainLabelNationality = new javax.swing.JLabel();
        formEmployeeMainLabelStatus = new javax.swing.JLabel();
        formEmployeeMainLabelDaysOff = new javax.swing.JLabel();
        formEmployeeMainTextFieldNik = new javax.swing.JTextField();
        formEmployeeMainTextFieldFirstName = new javax.swing.JTextField();
        formEmployeeMainTextFieldLastName = new javax.swing.JTextField();
        formEmployeeMainComboBoxPosition = new javax.swing.JComboBox<>();
        formEmployeeMainComboBoxEducation = new javax.swing.JComboBox<>();
        formEmployeeMainTextFieldSalary = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        formEmployeeMainTextAreaAddress = new javax.swing.JTextArea();
        formEmployeeMainTextFieldCity = new javax.swing.JTextField();
        formEmployeeMainTextFieldPhone = new javax.swing.JTextField();
        formEmployeeMainComboBoxStatus = new javax.swing.JComboBox<>();
        formEmployeeMainTextFieldDaysOff = new javax.swing.JTextField();
        formEmployeeMainPanelButton = new javax.swing.JPanel();
        formEmployeeMainButtonSave = new javax.swing.JButton();
        formEmployeeMainButtonClear = new javax.swing.JButton();
        formEmployeeMainPanelTable = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        formEmployeeMainTable = new javax.swing.JTable();
        formEmployeeMainButtonDelete = new javax.swing.JButton();
        formEmployeeMainButtonLogout = new javax.swing.JButton();
        formEmployeeMainButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("frameEmployee"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(1024, 768));

        formEmployeePanelHeader.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        formEmployeePanelHeader.setPreferredSize(new java.awt.Dimension(1024, 100));

        formEmployeeHeaderLable.setFont(new java.awt.Font("Roboto Medium", 0, 36)); // NOI18N
        formEmployeeHeaderLable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        formEmployeeHeaderLable.setText("Employee Management");

        formEmployeeHeaderLabelId.setFont(new java.awt.Font("Roboto Light", 0, 8)); // NOI18N
        formEmployeeHeaderLabelId.setText("Id");
        formEmployeeHeaderLabelId.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        formEmployeeHeaderLabelIsUpdate.setFont(new java.awt.Font("Roboto Light", 0, 8)); // NOI18N
        formEmployeeHeaderLabelIsUpdate.setText("IsUpdate");
        formEmployeeHeaderLabelIsUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        formEmployeeHeaderLabelIdEmployee.setFont(new java.awt.Font("Roboto Light", 0, 8)); // NOI18N
        formEmployeeHeaderLabelIdEmployee.setText("IdEmployee");
        formEmployeeHeaderLabelIdEmployee.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        formEmployeeHeaderLabelNik.setFont(new java.awt.Font("Roboto Light", 0, 8)); // NOI18N
        formEmployeeHeaderLabelNik.setText("Nik");
        formEmployeeHeaderLabelNik.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout formEmployeePanelHeaderLayout = new javax.swing.GroupLayout(formEmployeePanelHeader);
        formEmployeePanelHeader.setLayout(formEmployeePanelHeaderLayout);
        formEmployeePanelHeaderLayout.setHorizontalGroup(
            formEmployeePanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formEmployeePanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formEmployeePanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(formEmployeeHeaderLable, javax.swing.GroupLayout.DEFAULT_SIZE, 1004, Short.MAX_VALUE)
                    .addGroup(formEmployeePanelHeaderLayout.createSequentialGroup()
                        .addComponent(formEmployeeHeaderLabelId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(formEmployeeHeaderLabelIsUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(formEmployeeHeaderLabelIdEmployee)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(formEmployeeHeaderLabelNik)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        formEmployeePanelHeaderLayout.setVerticalGroup(
            formEmployeePanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formEmployeePanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(formEmployeeHeaderLable, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formEmployeePanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(formEmployeeHeaderLabelId)
                    .addComponent(formEmployeeHeaderLabelIsUpdate)
                    .addComponent(formEmployeeHeaderLabelIdEmployee)
                    .addComponent(formEmployeeHeaderLabelNik)))
        );

        formEmployeeHeaderLable.getAccessibleContext().setAccessibleDescription("");

        formEmployeePanelFooter.setPreferredSize(new java.awt.Dimension(1024, 75));

        formEmployeeLabelFooter2.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        formEmployeeLabelFooter2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        formEmployeeLabelFooter2.setText("Employee Content Management System CopyRight Â©2021");

        javax.swing.GroupLayout formEmployeePanelFooterLayout = new javax.swing.GroupLayout(formEmployeePanelFooter);
        formEmployeePanelFooter.setLayout(formEmployeePanelFooterLayout);
        formEmployeePanelFooterLayout.setHorizontalGroup(
            formEmployeePanelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formEmployeePanelFooterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(formEmployeeLabelFooter2, javax.swing.GroupLayout.DEFAULT_SIZE, 1004, Short.MAX_VALUE)
                .addContainerGap())
        );
        formEmployeePanelFooterLayout.setVerticalGroup(
            formEmployeePanelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formEmployeePanelFooterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(formEmployeeLabelFooter2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        formEmployeeMainLabelFullName.setFont(new java.awt.Font("Roboto Light", 1, 18)); // NOI18N
        formEmployeeMainLabelFullName.setText("FullName");

        formEmployeeMainLabelNik.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formEmployeeMainLabelNik.setText("NIK*");

        formEmployeeMainLabelFirstName.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formEmployeeMainLabelFirstName.setText("First Name*");

        formEmployeeMainLabelLastName.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formEmployeeMainLabelLastName.setText("Last Name");

        formEmployeeMainLabelPosition.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formEmployeeMainLabelPosition.setText("Position");

        formEmployeeMainLabelEducation.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formEmployeeMainLabelEducation.setText("Education");

        formEmployeeMainLabelSalary.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formEmployeeMainLabelSalary.setText("Basic Salary*");

        formEmployeeMainLabelAddress.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formEmployeeMainLabelAddress.setText("Address*");

        formEmployeeMainLabelCity.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formEmployeeMainLabelCity.setText("City*");

        formEmployeeMainLabelNationality.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formEmployeeMainLabelNationality.setText("Phone");

        formEmployeeMainLabelStatus.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formEmployeeMainLabelStatus.setText("Status");

        formEmployeeMainLabelDaysOff.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formEmployeeMainLabelDaysOff.setText("Days off*");

        formEmployeeMainTextFieldNik.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N

        formEmployeeMainTextFieldFirstName.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N

        formEmployeeMainTextFieldLastName.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N

        formEmployeeMainComboBoxPosition.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formEmployeeMainComboBoxPosition.setToolTipText("");

        formEmployeeMainComboBoxEducation.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formEmployeeMainComboBoxEducation.setName(""); // NOI18N

        formEmployeeMainTextFieldSalary.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N

        jScrollPane1.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N

        formEmployeeMainTextAreaAddress.setColumns(20);
        formEmployeeMainTextAreaAddress.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formEmployeeMainTextAreaAddress.setRows(5);
        jScrollPane1.setViewportView(formEmployeeMainTextAreaAddress);

        formEmployeeMainTextFieldCity.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N

        formEmployeeMainTextFieldPhone.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N

        formEmployeeMainComboBoxStatus.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N

        formEmployeeMainTextFieldDaysOff.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N

        formEmployeeMainButtonSave.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formEmployeeMainButtonSave.setText("Save");
        formEmployeeMainButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formEmployeeMainButtonSaveActionPerformed(evt);
            }
        });
        formEmployeeMainButtonSave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formEmployeeMainButtonSaveKeyPressed(evt);
            }
        });

        formEmployeeMainButtonClear.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formEmployeeMainButtonClear.setText("Clear");
        formEmployeeMainButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formEmployeeMainButtonClearActionPerformed(evt);
            }
        });
        formEmployeeMainButtonClear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formEmployeeMainButtonClearKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout formEmployeeMainPanelButtonLayout = new javax.swing.GroupLayout(formEmployeeMainPanelButton);
        formEmployeeMainPanelButton.setLayout(formEmployeeMainPanelButtonLayout);
        formEmployeeMainPanelButtonLayout.setHorizontalGroup(
            formEmployeeMainPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formEmployeeMainPanelButtonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(formEmployeeMainButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(formEmployeeMainButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(221, 221, 221))
        );
        formEmployeeMainPanelButtonLayout.setVerticalGroup(
            formEmployeeMainPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formEmployeeMainPanelButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formEmployeeMainPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(formEmployeeMainButtonClear)
                    .addComponent(formEmployeeMainButtonSave))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        formEmployeeMainTable.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        formEmployeeMainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nik", "First Name", "Last Name", "Position", "Address", "Salary", "Days Off", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        formEmployeeMainTable.setColumnSelectionAllowed(true);
        formEmployeeMainTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formEmployeeMainTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(formEmployeeMainTable);
        formEmployeeMainTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        formEmployeeMainButtonDelete.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formEmployeeMainButtonDelete.setText("Delete");
        formEmployeeMainButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formEmployeeMainButtonDeleteActionPerformed(evt);
            }
        });
        formEmployeeMainButtonDelete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formEmployeeMainButtonDeleteKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout formEmployeeMainPanelTableLayout = new javax.swing.GroupLayout(formEmployeeMainPanelTable);
        formEmployeeMainPanelTable.setLayout(formEmployeeMainPanelTableLayout);
        formEmployeeMainPanelTableLayout.setHorizontalGroup(
            formEmployeeMainPanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formEmployeeMainPanelTableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formEmployeeMainPanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 984, Short.MAX_VALUE)
                    .addComponent(formEmployeeMainButtonDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        formEmployeeMainPanelTableLayout.setVerticalGroup(
            formEmployeeMainPanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formEmployeeMainPanelTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(formEmployeeMainButtonDelete)
                .addContainerGap())
        );

        formEmployeeMainButtonLogout.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formEmployeeMainButtonLogout.setText("Logout");
        formEmployeeMainButtonLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formEmployeeMainButtonLogoutActionPerformed(evt);
            }
        });
        formEmployeeMainButtonLogout.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formEmployeeMainButtonLogoutKeyPressed(evt);
            }
        });

        formEmployeeMainButtonCancel.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        formEmployeeMainButtonCancel.setText("Back");
        formEmployeeMainButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formEmployeeMainButtonCancelActionPerformed(evt);
            }
        });
        formEmployeeMainButtonCancel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formEmployeeMainButtonCancelKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout formEmployeePanelMainLayout = new javax.swing.GroupLayout(formEmployeePanelMain);
        formEmployeePanelMain.setLayout(formEmployeePanelMainLayout);
        formEmployeePanelMainLayout.setHorizontalGroup(
            formEmployeePanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formEmployeePanelMainLayout.createSequentialGroup()
                .addGroup(formEmployeePanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formEmployeePanelMainLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(formEmployeeMainPanelTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(formEmployeePanelMainLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(formEmployeeMainPanelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(formEmployeePanelMainLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(formEmployeePanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(formEmployeeMainLabelLastName)
                            .addGroup(formEmployeePanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(formEmployeePanelMainLayout.createSequentialGroup()
                                    .addComponent(formEmployeeMainLabelFirstName)
                                    .addGap(392, 392, 392))
                                .addGroup(formEmployeePanelMainLayout.createSequentialGroup()
                                    .addGroup(formEmployeePanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(formEmployeeMainLabelNik)
                                        .addComponent(formEmployeeMainLabelPosition)
                                        .addComponent(formEmployeeMainLabelSalary))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(formEmployeePanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(formEmployeeMainTextFieldLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(formEmployeeMainTextFieldFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(formEmployeeMainTextFieldNik, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(formEmployeeMainComboBoxPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(formEmployeeMainTextFieldSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(formEmployeeMainComboBoxEducation, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(formEmployeeMainLabelEducation)
                            .addComponent(formEmployeeMainLabelFullName))
                        .addGroup(formEmployeePanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(formEmployeePanelMainLayout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(formEmployeePanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(formEmployeePanelMainLayout.createSequentialGroup()
                                        .addComponent(formEmployeeMainLabelStatus)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(formEmployeeMainComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(formEmployeePanelMainLayout.createSequentialGroup()
                                        .addGroup(formEmployeePanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(formEmployeeMainLabelCity)
                                            .addComponent(formEmployeeMainLabelNationality)
                                            .addComponent(formEmployeeMainLabelAddress))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(formEmployeePanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(formEmployeeMainTextFieldCity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(formEmployeeMainTextFieldPhone, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formEmployeePanelMainLayout.createSequentialGroup()
                                        .addComponent(formEmployeeMainLabelDaysOff)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                                        .addComponent(formEmployeeMainTextFieldDaysOff, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(formEmployeePanelMainLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(formEmployeeMainButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(formEmployeeMainButtonLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        formEmployeePanelMainLayout.setVerticalGroup(
            formEmployeePanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formEmployeePanelMainLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(formEmployeePanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(formEmployeeMainButtonLogout)
                    .addComponent(formEmployeeMainButtonCancel)
                    .addComponent(formEmployeeMainLabelFullName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(formEmployeePanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formEmployeePanelMainLayout.createSequentialGroup()
                        .addGroup(formEmployeePanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(formEmployeeMainTextFieldNik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(formEmployeeMainLabelNik)
                            .addComponent(formEmployeeMainLabelAddress))
                        .addGap(18, 18, 18)
                        .addGroup(formEmployeePanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(formEmployeeMainLabelFirstName)
                            .addComponent(formEmployeeMainTextFieldFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(formEmployeePanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(formEmployeeMainTextFieldLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formEmployeeMainLabelLastName)
                    .addComponent(formEmployeeMainLabelCity)
                    .addComponent(formEmployeeMainTextFieldCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(formEmployeePanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(formEmployeeMainLabelPosition)
                    .addComponent(formEmployeeMainComboBoxPosition)
                    .addComponent(formEmployeeMainLabelNationality)
                    .addComponent(formEmployeeMainTextFieldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(formEmployeePanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(formEmployeeMainLabelEducation)
                    .addComponent(formEmployeeMainComboBoxEducation)
                    .addComponent(formEmployeeMainLabelStatus)
                    .addComponent(formEmployeeMainComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(formEmployeePanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(formEmployeeMainTextFieldSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formEmployeeMainLabelSalary)
                    .addComponent(formEmployeeMainTextFieldDaysOff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formEmployeeMainLabelDaysOff))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(formEmployeeMainPanelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(formEmployeeMainPanelTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(formEmployeePanelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(formEmployeePanelFooter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(formEmployeePanelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(formEmployeePanelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(formEmployeePanelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(formEmployeePanelFooter, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        formEmployeePanelHeader.getAccessibleContext().setAccessibleName("");
        formEmployeePanelHeader.getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    LocalDateTime localDateTimeNow = LocalDateTime.now();
    DateTimeFormatter DATETIME_FORMATTER = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");
    private List<String> access_menu = new ArrayList<>();
    private String full_name;
    
    public void setLabelId(String text) {
        formEmployeeHeaderLabelId.setText(text);
    }

    public void setLabelNik(String text) {
        formEmployeeHeaderLabelNik.setText(text);
    }
    
    public String getFullName(){
        return full_name;
    }
    public void setFullName(String text) {
        this.full_name = text;
        formEmployeeMainLabelFullName.setText("Welcome " + text + ",");
    }
    
    public List<String> getAccessMenu(){
        return access_menu;
    }
    public void setAccessMenu(List<String> value){
        this.access_menu = value;
    }
    
    private void bindDataPosition() {
        try {
            Position position = new Position();
            HashMap<String, Integer> map = position.populateComboBox();
            TreeMap<String, Integer> sortMap = new TreeMap<>(map);
            sortMap.keySet().forEach((e) -> formEmployeeMainComboBoxPosition.addItem(e));
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }

    private void bindDataStatus() {
        try {
            Constanta.Status status = new Constanta.Status();
            HashMap<String, Integer> map = status.populateComboBox();
            TreeMap<String, Integer> sortMap = new TreeMap<>(map);
            sortMap.keySet().forEach((e) -> formEmployeeMainComboBoxStatus.addItem(e));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }

    private void bindDataEducation() {
        try {
            Constanta.Education education = new Constanta.Education();
            HashMap<String, Integer> map = education.populateComboBox();
            TreeMap<String, Integer> sortMap = new TreeMap<>(map);
            sortMap.keySet().forEach((e) -> formEmployeeMainComboBoxEducation.addItem(e));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }

    private void loadData() {
        try {
            Employee employee = new Employee();
            List<Employee> listEmployee = employee.list();
            DefaultTableModel defaultTableModel = (DefaultTableModel) formEmployeeMainTable.getModel();
            defaultTableModel.setRowCount(0);
            Object[] rows = new Object[9];
            for (int i = 0; i < listEmployee.size(); i++) {
                TableColumnModel tableColumnModel = formEmployeeMainTable.getColumnModel();
                tableColumnModel.getColumn(0).setMaxWidth(0);
                tableColumnModel.getColumn(0).setMinWidth(0);

                rows[0] = listEmployee.get(i).getId();
                rows[1] = listEmployee.get(i).getNik();
                rows[2] = listEmployee.get(i).getFirstName();
                rows[3] = listEmployee.get(i).getLastName();
                rows[4] = listEmployee.get(i).getPositionName().trim();
                rows[5] = listEmployee.get(i).getAddress();
                rows[6] = String.format("%.0f", listEmployee.get(i).getBasicSalary());
                rows[7] = listEmployee.get(i).getDaysOff();
                rows[8] = listEmployee.get(i).getStatus();

                defaultTableModel.addRow(rows);
            }
            formEmployeeMainTable.setAutoCreateRowSorter(true);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }

    private void clearForm() {
        try {
            formEmployeeHeaderLabelIsUpdate.setText("0");
            formEmployeeHeaderLabelIdEmployee.setText("");
            formEmployeeMainTextFieldNik.setText("");
            formEmployeeMainTextFieldFirstName.setText("");
            formEmployeeMainTextFieldLastName.setText("");
            formEmployeeMainTextAreaAddress.setText("");
            formEmployeeMainTextFieldCity.setText("");
            formEmployeeMainTextFieldPhone.setText("");
            formEmployeeMainTextFieldSalary.setText("");
            formEmployeeMainTextFieldDaysOff.setText("");
            formEmployeeHeaderLabelIsUpdate.setText(Constanta.Default.DEFAULT_VALUE);
            formEmployeeHeaderLabelIdEmployee.setText(Constanta.Default.DEFAULT_VALUE);
            formEmployeeMainButtonSave.setText(Constanta.Default.BUTTON_ADD);
            formEmployeeMainButtonDelete.setVisible(false);
            loadData();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }

    private boolean submit() throws SQLException {
        boolean result;
        Employee employee = new Employee();

        Position position = new Position();
        HashMap<String, Integer> map = position.populateComboBox();
        Integer id_position = Integer.parseInt(map.get(formEmployeeMainComboBoxPosition.getSelectedItem().toString()).toString());

        employee.setIdPosition(id_position);
        employee.setNik(formEmployeeMainTextFieldNik.getText());
        employee.setFirstName(formEmployeeMainTextFieldFirstName.getText());
        employee.setLastName(formEmployeeMainTextFieldLastName.getText());
        employee.setAddress(formEmployeeMainTextAreaAddress.getText());
        employee.setCity(formEmployeeMainTextFieldCity.getText());
        employee.setPhone(formEmployeeMainTextFieldPhone.getText());
        employee.setEducationDegree(formEmployeeMainComboBoxEducation.getSelectedItem().toString());
        employee.setStatus(formEmployeeMainComboBoxStatus.getSelectedItem().toString());
        employee.setBasicSalary(Float.parseFloat(formEmployeeMainTextFieldSalary.getText()));
        employee.setDaysOff(Integer.parseInt(formEmployeeMainTextFieldDaysOff.getText()));
        employee.setCreatedBy(formEmployeeHeaderLabelNik.getText());
        employee.setCreatedDate(localDateTimeNow.format(DATETIME_FORMATTER));
        employee.setUpdatedBy(formEmployeeHeaderLabelNik.getText());
        employee.setUpdatedDate(localDateTimeNow.format(DATETIME_FORMATTER));

        if (formEmployeeHeaderLabelIsUpdate.getText().equals("1")) {
            employee.setId(Integer.parseInt(formEmployeeHeaderLabelIdEmployee.getText()));
            result = employee.update(employee);
        } else {
            result = employee.create(employee);
        }

        loadData();
        return result;
    }

    private void assignValue(Employee employee) {
        try {
            formEmployeeHeaderLabelIsUpdate.setText("1");
            formEmployeeHeaderLabelIdEmployee.setText(employee.getId().toString());
            formEmployeeMainTextFieldNik.setText(employee.getNik());
            formEmployeeMainTextFieldFirstName.setText(employee.getFirstName());
            formEmployeeMainTextFieldLastName.setText(employee.getLastName());
            formEmployeeMainTextAreaAddress.setText(employee.getAddress());
            formEmployeeMainTextFieldCity.setText(employee.getCity());
            formEmployeeMainTextFieldPhone.setText(employee.getPhone());
            formEmployeeMainTextFieldSalary.setText(String.format("%.0f", employee.getBasicSalary()));
            formEmployeeMainTextFieldDaysOff.setText(employee.getDaysOff().toString());
            formEmployeeMainButtonSave.setText(Constanta.Default.BUTTON_UPDATE);
            formEmployeeMainButtonDelete.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }

    private boolean validator() {
        try {
            if (formEmployeeHeaderLabelIsUpdate.getText().equals("")
                    || formEmployeeHeaderLabelIdEmployee.getText().equals("")
                    || formEmployeeMainTextFieldNik.getText().equals("")
                    || formEmployeeMainTextFieldFirstName.getText().equals("")
                    || formEmployeeMainTextAreaAddress.getText().equals("")
                    || formEmployeeMainTextFieldCity.getText().equals("")
                    || formEmployeeMainTextFieldPhone.getText().equals("")
                    || formEmployeeMainTextFieldSalary.getText().equals("")
                    || formEmployeeMainTextFieldDaysOff.getText().equals("")) {
                JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_INVALID);
                return false;
            } else {
                return true;
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
            return false;
        }
    }
    
    private void formEmployeeMainButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formEmployeeMainButtonSaveActionPerformed
        // TODO add your handling code here:
        try {
            if (validator()) {
                if (submit()) {
                    JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_SUCCESS);
                } else {
                    JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_FAILED);
                }
            }
            clearForm();
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formEmployeeMainButtonSaveActionPerformed

    private void formEmployeeMainButtonSaveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formEmployeeMainButtonSaveKeyPressed
        // TODO add your handling code here:
        try {
            if (validator()) {
                if (submit()) {
                    JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_SUCCESS);
                } else {
                    JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_FAILED);
                }
            }
            clearForm();
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formEmployeeMainButtonSaveKeyPressed

    private void formEmployeeMainButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formEmployeeMainButtonClearActionPerformed
        // TODO add your handling code here:
        try {
            clearForm();
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formEmployeeMainButtonClearActionPerformed

    private void formEmployeeMainButtonClearKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formEmployeeMainButtonClearKeyPressed
        // TODO add your handling code here:
        try {
            clearForm();
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formEmployeeMainButtonClearKeyPressed

    private void formEmployeeMainTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formEmployeeMainTableMouseClicked
        // TODO add your handling code here:
        try {
            Employee employee = new Employee();
            int rowSelected = formEmployeeMainTable.getSelectedRow();
            int selectedId = Integer.parseInt(formEmployeeMainTable.getValueAt(rowSelected, 0).toString());
            employee = employee.get(selectedId);
            assignValue(employee);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formEmployeeMainTableMouseClicked

    private void formEmployeeMainButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formEmployeeMainButtonDeleteActionPerformed
        // TODO add your handling code here:
        try {
            int action = JOptionPane.showConfirmDialog(null,
                    Constanta.Messages.MESSAGE_CONFIRM_DELETE,
                    Constanta.Messages.BANNER_CONFIRM,
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);
            if (action == JOptionPane.YES_OPTION) {
                Employee employee = new Employee();
                int selectedId = Integer.parseInt(formEmployeeHeaderLabelIdEmployee.getText());
                if (employee.delete(selectedId)) {
                    JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_SUCCESS);
                } else {
                    JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_FAILED);
                }
            }
            clearForm();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formEmployeeMainButtonDeleteActionPerformed

    private void formEmployeeMainButtonDeleteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formEmployeeMainButtonDeleteKeyPressed
        // TODO add your handling code here:
        try {
            int action = JOptionPane.showConfirmDialog(null,
                    Constanta.Messages.MESSAGE_CONFIRM_DELETE,
                    Constanta.Messages.BANNER_CONFIRM,
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);
            if (action == JOptionPane.YES_OPTION) {
                Employee employee = new Employee();
                int selectedId = Integer.parseInt(formEmployeeHeaderLabelIdEmployee.getText());
                if (employee.delete(selectedId)) {
                    JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_SUCCESS);
                } else {
                    JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_FAILED);
                }
            }
            clearForm();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formEmployeeMainButtonDeleteKeyPressed

    private void formEmployeeMainButtonLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formEmployeeMainButtonLogoutActionPerformed
        // TODO add your handling code here:
        try {
            int action = JOptionPane.showConfirmDialog(null,
                    Constanta.Messages.MESSAGE_CONFIRM_LOGOUT,
                    Constanta.Messages.BANNER_CONFIRM,
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);

            if (action == JOptionPane.YES_OPTION) {
                Login login = new Login();
                login.show();
                this.dispose();
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formEmployeeMainButtonLogoutActionPerformed

    private void formEmployeeMainButtonLogoutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formEmployeeMainButtonLogoutKeyPressed
        // TODO add your handling code here:
        try {
            int action = JOptionPane.showConfirmDialog(null,
                    Constanta.Messages.MESSAGE_CONFIRM_LOGOUT,
                    Constanta.Messages.BANNER_CONFIRM,
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);

            if (action == JOptionPane.YES_OPTION) {
                Login login = new Login();
                login.show();
                this.dispose();
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formEmployeeMainButtonLogoutKeyPressed

    private void formEmployeeMainButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formEmployeeMainButtonCancelActionPerformed
        // TODO add your handling code here:
        try {
            Dashboard dashboard = new Dashboard();
            dashboard.show();
            dashboard.setLabelId(formEmployeeHeaderLabelId.getText());
            dashboard.setLabelNik(formEmployeeHeaderLabelNik.getText());
            dashboard.setFullName(getFullName());
            dashboard.setAccessMenu(getAccessMenu());
            dashboard.loadDataAttendance();
            dashboard.loadDataLeave();
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formEmployeeMainButtonCancelActionPerformed

    private void formEmployeeMainButtonCancelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formEmployeeMainButtonCancelKeyPressed
        // TODO add your handling code here:
        try {
            Dashboard dashboard = new Dashboard();
            dashboard.show();
            dashboard.setLabelId(formEmployeeHeaderLabelId.getText());
            dashboard.setLabelNik(formEmployeeHeaderLabelNik.getText());
            dashboard.setFullName(getFullName());
            dashboard.setAccessMenu(getAccessMenu());
            dashboard.loadDataAttendance();
            dashboard.loadDataLeave();
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, Constanta.Messages.MESSAGE_ERROR + e.getMessage());
        }
    }//GEN-LAST:event_formEmployeeMainButtonCancelKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel formEmployeeHeaderLabelId;
    public javax.swing.JLabel formEmployeeHeaderLabelIdEmployee;
    public javax.swing.JLabel formEmployeeHeaderLabelIsUpdate;
    public javax.swing.JLabel formEmployeeHeaderLabelNik;
    private javax.swing.JLabel formEmployeeHeaderLable;
    private javax.swing.JLabel formEmployeeLabelFooter2;
    private javax.swing.JButton formEmployeeMainButtonCancel;
    private javax.swing.JButton formEmployeeMainButtonClear;
    private javax.swing.JButton formEmployeeMainButtonDelete;
    private javax.swing.JButton formEmployeeMainButtonLogout;
    private javax.swing.JButton formEmployeeMainButtonSave;
    private javax.swing.JComboBox<String> formEmployeeMainComboBoxEducation;
    private javax.swing.JComboBox<String> formEmployeeMainComboBoxPosition;
    private javax.swing.JComboBox<String> formEmployeeMainComboBoxStatus;
    private javax.swing.JLabel formEmployeeMainLabelAddress;
    private javax.swing.JLabel formEmployeeMainLabelCity;
    private javax.swing.JLabel formEmployeeMainLabelDaysOff;
    private javax.swing.JLabel formEmployeeMainLabelEducation;
    private javax.swing.JLabel formEmployeeMainLabelFirstName;
    private javax.swing.JLabel formEmployeeMainLabelFullName;
    private javax.swing.JLabel formEmployeeMainLabelLastName;
    private javax.swing.JLabel formEmployeeMainLabelNationality;
    private javax.swing.JLabel formEmployeeMainLabelNik;
    private javax.swing.JLabel formEmployeeMainLabelPosition;
    private javax.swing.JLabel formEmployeeMainLabelSalary;
    private javax.swing.JLabel formEmployeeMainLabelStatus;
    private javax.swing.JPanel formEmployeeMainPanelButton;
    private javax.swing.JPanel formEmployeeMainPanelTable;
    private javax.swing.JTable formEmployeeMainTable;
    private javax.swing.JTextArea formEmployeeMainTextAreaAddress;
    private javax.swing.JTextField formEmployeeMainTextFieldCity;
    private javax.swing.JTextField formEmployeeMainTextFieldDaysOff;
    private javax.swing.JTextField formEmployeeMainTextFieldFirstName;
    private javax.swing.JTextField formEmployeeMainTextFieldLastName;
    private javax.swing.JTextField formEmployeeMainTextFieldNik;
    private javax.swing.JTextField formEmployeeMainTextFieldPhone;
    private javax.swing.JTextField formEmployeeMainTextFieldSalary;
    private javax.swing.JPanel formEmployeePanelFooter;
    private javax.swing.JPanel formEmployeePanelHeader;
    private javax.swing.JPanel formEmployeePanelMain;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
